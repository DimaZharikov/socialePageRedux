[{"Q:\\react-incubator\\socialePageRedux\\src\\index.tsx":"1","Q:\\react-incubator\\socialePageRedux\\src\\App.tsx":"2","Q:\\react-incubator\\socialePageRedux\\src\\reportWebVitals.ts":"3","Q:\\react-incubator\\socialePageRedux\\src\\WrapPage\\Main\\MainConteiner.tsx":"4","Q:\\react-incubator\\socialePageRedux\\src\\WrapPage\\Main\\MainPostWall\\PostWallComponent.tsx":"5","Q:\\react-incubator\\socialePageRedux\\src\\WrapPage\\Main\\MainPostWall\\PostWallConteiner.tsx":"6","Q:\\react-incubator\\socialePageRedux\\src\\Store\\postWall.reducer.ts":"7","Q:\\react-incubator\\socialePageRedux\\src\\Store\\Store.ts":"8","Q:\\react-incubator\\socialePageRedux\\src\\WrapPage\\Friend\\FriendConteiner.tsx":"9","Q:\\react-incubator\\socialePageRedux\\src\\Store\\FriendsPage.Reducer.ts":"10","Q:\\react-incubator\\socialePageRedux\\src\\StaticPage\\Navigation\\Navigation.tsx":"11","Q:\\react-incubator\\socialePageRedux\\src\\WrapPage\\Message\\MessagePageConteiner.tsx":"12","Q:\\react-incubator\\socialePageRedux\\src\\WrapPage\\Message\\Components\\MessageItems\\MessageItemsConteiner.tsx":"13","Q:\\react-incubator\\socialePageRedux\\src\\WrapPage\\Message\\Components\\SerchFriend\\SearchFriendsComponent.tsx":"14","Q:\\react-incubator\\socialePageRedux\\src\\Store\\MessagePage.Reducer.ts":"15","Q:\\react-incubator\\socialePageRedux\\src\\WrapPage\\Message\\Components\\SerchFriend\\SearchFriendsConteiner.tsx":"16","Q:\\react-incubator\\socialePageRedux\\src\\WrapPage\\Message\\Components\\MessageItems\\MessageItemsComponent.tsx":"17","Q:\\react-incubator\\socialePageRedux\\src\\WrapPage\\Friend\\FriendsComponent.tsx":"18","Q:\\react-incubator\\socialePageRedux\\src\\common\\preloader\\Preloader.tsx":"19"},{"size":637,"mtime":1607154412216,"results":"20","hashOfConfig":"21"},{"size":805,"mtime":1607163093301,"results":"22","hashOfConfig":"21"},{"size":425,"mtime":1606579925625,"results":"23","hashOfConfig":"21"},{"size":281,"mtime":1606678542399,"results":"24","hashOfConfig":"21"},{"size":3132,"mtime":1607006074876,"results":"25","hashOfConfig":"21"},{"size":1183,"mtime":1606998842126,"results":"26","hashOfConfig":"21"},{"size":3338,"mtime":1607002378288,"results":"27","hashOfConfig":"21"},{"size":535,"mtime":1608494841571,"results":"28","hashOfConfig":"21"},{"size":3509,"mtime":1608546036120,"results":"29","hashOfConfig":"21"},{"size":2759,"mtime":1608544455116,"results":"30","hashOfConfig":"21"},{"size":744,"mtime":1607159145593,"results":"31","hashOfConfig":"21"},{"size":518,"mtime":1607240097151,"results":"32","hashOfConfig":"21"},{"size":866,"mtime":1607162996957,"results":"33","hashOfConfig":"21"},{"size":1681,"mtime":1608128161338,"results":"34","hashOfConfig":"21"},{"size":4646,"mtime":1608494547083,"results":"35","hashOfConfig":"21"},{"size":909,"mtime":1607178659452,"results":"36","hashOfConfig":"21"},{"size":2789,"mtime":1607847097118,"results":"37","hashOfConfig":"21"},{"size":2575,"mtime":1608540935119,"results":"38","hashOfConfig":"21"},{"size":225,"mtime":1608546020228,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1cbh7fb",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"67"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"Q:\\react-incubator\\socialePageRedux\\src\\index.tsx",[],["90","91"],"Q:\\react-incubator\\socialePageRedux\\src\\App.tsx",[],"Q:\\react-incubator\\socialePageRedux\\src\\reportWebVitals.ts",[],["92","93"],"Q:\\react-incubator\\socialePageRedux\\src\\WrapPage\\Main\\MainConteiner.tsx",[],"Q:\\react-incubator\\socialePageRedux\\src\\WrapPage\\Main\\MainPostWall\\PostWallComponent.tsx",["94"],"import React, {ChangeEvent, useState} from \"react\"\r\nimport {ItemPostType} from \"../../../Store/postWall.reducer\";\r\nimport {TextField} from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport {Delete} from \"@material-ui/icons\";\r\n\r\ninterface Props {\r\n    itemsPost: Array <ItemPostType>,\r\n    messageForNewPost: string,\r\n    onAddNewPostHandler: (content: string) => void,\r\n    onChangeTextPost: (content:string) => void,\r\n    onRemovePostCreater:(id:string) => void,\r\n    setItemPostAC: (newPosts: ItemPostType) => void\r\n}\r\n\r\n\r\nconst PostWallComponent = (props: Props) => {\r\n\r\n    const [error, setError] = useState<string|null>(null)\r\n\r\n    const onChangeTextFieldHandler = (event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n        props.onChangeTextPost(event.currentTarget.value)\r\n    }\r\n\r\n    const onAddNewPost = (content: string) => {\r\n        if (props.messageForNewPost.trim() !==''){\r\n            props.onAddNewPostHandler(content)\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const onRemovePostHandler = (id: string) => {\r\n        props.onRemovePostCreater(id)\r\n    }\r\n\r\n    const date = new Date()\r\n    let hourse = date.getHours();\r\n    let minutes = date.getMinutes();\r\n\r\n\r\n    return(<div>\r\n\r\n       <div>\r\n\r\n           <TextField value = {props.messageForNewPost} onChange={onChangeTextFieldHandler}  id=\"standard-basic\" label=\"Standard\" />\r\n           <Button onClick={()=>onAddNewPost(props.messageForNewPost)} variant=\"outlined\" color=\"primary\" size='small'>Send</Button>\r\n           {error && <div>{error}</div>}\r\n       </div>\r\n        <div>\r\n            {\r\n                props.itemsPost.map( p => {\r\n                    return(\r\n                        <div key = {p.id}>\r\n                            <div>\r\n                                <div>\r\n                                    <div><img src={p.ImgPerson} alt=\"\"/></div>\r\n                                    <div>\r\n                                        <h4>{p.person.name} {p.person.secondName}</h4>\r\n                                        <p>{`${hourse}:${minutes}`}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <IconButton onClick = {()=> onRemovePostHandler(p.id)}>\r\n                                        <Delete />\r\n                                    </IconButton>\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                                <p>{p.content}</p>\r\n                            </div>\r\n                            <div>\r\n                                <button><img src={p.imgLikes} alt=\"\"/></button>\r\n                                <h3>{p.counterLikes}</h3>\r\n                            </div>\r\n                            <div><img src={p.imgShare} alt=\"\"/>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n\r\n\r\n    </div>)\r\n}\r\n\r\nexport default PostWallComponent;","Q:\\react-incubator\\socialePageRedux\\src\\WrapPage\\Main\\MainPostWall\\PostWallConteiner.tsx",["95"],"import React from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n     ItemPostType,\r\n    onAddNewPostHandler,\r\n    onChangeTextPost,\r\n    onRemovePostCreater, setItemPostAC,\r\n\r\n} from \"../../../Store/postWall.reducer\";\r\nimport PostWallComponent from \"./PostWallComponent\";\r\nimport {Dispatch} from \"redux\";\r\n\r\n\r\n\r\nlet mapStateToProps  = (state:{postBlock:{itemsPost: Array <ItemPostType>,messageForNewPost: string } } ) => {\r\n    return {\r\n        itemsPost: state.postBlock.itemsPost,\r\n        messageForNewPost : state.postBlock.messageForNewPost\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch : Dispatch) => {\r\n    return{\r\n        onAddNewPostHandler: (content: string) => {\r\n            dispatch(onAddNewPostHandler(content))\r\n        },\r\n        onChangeTextPost: (content:string) => {\r\n            dispatch(onChangeTextPost(content))\r\n        },\r\n        onRemovePostCreater:(id:string) => {\r\n            dispatch(onRemovePostCreater(id))\r\n        },\r\n        setItemPostAC: (newPosts: ItemPostType) => {\r\n            dispatch(setItemPostAC(newPosts))\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default connect (mapStateToProps, mapDispatchToProps) (PostWallComponent)\r\n\r\n\r\n",["96","97"],"Q:\\react-incubator\\socialePageRedux\\src\\Store\\postWall.reducer.ts",[],"Q:\\react-incubator\\socialePageRedux\\src\\Store\\Store.ts",[],"Q:\\react-incubator\\socialePageRedux\\src\\WrapPage\\Friend\\FriendConteiner.tsx",["98"],"Q:\\react-incubator\\socialePageRedux\\src\\Store\\FriendsPage.Reducer.ts",[],"Q:\\react-incubator\\socialePageRedux\\src\\StaticPage\\Navigation\\Navigation.tsx",[],["99","100"],"Q:\\react-incubator\\socialePageRedux\\src\\WrapPage\\Message\\MessagePageConteiner.tsx",["101","102"],"import React, {useState} from 'react'\r\nimport SearchFriendsConteiner from \"./Components/SerchFriend/SearchFriendsConteiner\";\r\nimport MessageItemsConteiner from \"./Components/MessageItems/MessageItemsConteiner\";\r\nimport {ChangeFilterType} from \"../../Store/MessagePage.Reducer\";\r\n\r\n\r\n\r\ninterface props {\r\n\r\n}\r\n\r\n\r\n\r\nconst MessagePageConteiner = (props: props) => {\r\n\r\n\r\n\r\n    return(<div>\r\n        <SearchFriendsConteiner />\r\n\r\n        <MessageItemsConteiner  />\r\n\r\n    </div>)\r\n}\r\n\r\nexport default MessagePageConteiner","Q:\\react-incubator\\socialePageRedux\\src\\WrapPage\\Message\\Components\\MessageItems\\MessageItemsConteiner.tsx",["103"],"import React from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport MessageItemsComponent from \"./MessageItemsComponent\";\r\nimport {messageItemType, onRemoveDialogueItemsAC, setMessageItemsAC} from \"../../../../Store/MessagePage.Reducer\";\r\nimport {Dispatch} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state: {messagePage: {messageItems: Array<messageItemType>}}) => {\r\n    return{\r\n        messageItems: state.messagePage.messageItems\r\n    }\r\n}\r\n\r\nlet matDispatchToProps = (dispatch : Dispatch) => {\r\n    return{\r\n        onRemoveDialogueItemsAC: (id: string) => {\r\n            dispatch(onRemoveDialogueItemsAC(id))\r\n        },\r\n\r\n\r\n        setMessage: (messageItems: Array<messageItemType>) => {\r\n            dispatch(setMessageItemsAC(messageItems))\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect (mapStateToProps, matDispatchToProps) (MessageItemsComponent)",["104","105"],"Q:\\react-incubator\\socialePageRedux\\src\\WrapPage\\Message\\Components\\SerchFriend\\SearchFriendsComponent.tsx",["106","107","108"],"Q:\\react-incubator\\socialePageRedux\\src\\Store\\MessagePage.Reducer.ts",[],"Q:\\react-incubator\\socialePageRedux\\src\\WrapPage\\Message\\Components\\SerchFriend\\SearchFriendsConteiner.tsx",["109"],"import React from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport SearchFriendsComponent from \"./SearchFriendsComponent\";\r\nimport {\r\n\r\n    onSearchFriendsAC,\r\n    searchFriendType,\r\n    setSearchFriendsAC\r\n} from \"../../../../Store/MessagePage.Reducer\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nconst mapStateToProps = (state: {messagePage: {searchFriends: Array<searchFriendType> }, searchInput: string}) => {\r\n    return{\r\n\r\n        searchFriends: state.messagePage.searchFriends\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch : Dispatch) => {\r\n    return{\r\n        setSearch: (searchFriends: Array<searchFriendType>) => {\r\n            dispatch(setSearchFriendsAC(searchFriends))\r\n        },\r\n        onFilterFriends: (name: string) => {\r\n            dispatch(onSearchFriendsAC(name))\r\n        },\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default connect (mapStateToProps, mapDispatchToProps) (SearchFriendsComponent)",["110","111"],"Q:\\react-incubator\\socialePageRedux\\src\\WrapPage\\Message\\Components\\MessageItems\\MessageItemsComponent.tsx",["112","113","114","115"],"import React, {FunctionComponent, useEffect, useState} from 'react'\r\nimport {ChangeFilterType, messageItemType} from \"../../../../Store/MessagePage.Reducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nimport {IconButton} from \"@material-ui/core\";\r\nimport {Delete} from \"@material-ui/icons\";\r\n\r\n\r\n\r\n\r\ninterface props {\r\n    messageItems: Array<messageItemType>,\r\n    onRemoveDialogueItemsAC: (id: string) => void,\r\n    setMessage: (messageItems: Array<messageItemType>) => void\r\n}\r\n\r\nconst MessageItemsComponent: React.FunctionComponent<props> = (props) => {\r\n\r\n// ChangeFiler --\r\n    const [messages, setMessages] = useState<messageItemType[]>(props.messageItems);\r\n    const [filter, setFilter]= useState<ChangeFilterType>('All');\r\n\r\n    let filteredMessage = props.messageItems\r\n\r\n        if (filter === 'Unread') {\r\n            filteredMessage = filteredMessage.filter(m=> m.importantly === 'Unread');\r\n        }\r\n\r\n        if (filter === 'Important'){\r\n           filteredMessage = filteredMessage.filter(m => m.importantly === 'Important')\r\n        }\r\n\r\n// -- ChangeFilter\r\n\r\n    return <div>\r\n        <div>\r\n            <button onClick={()=> setFilter('All')} >All</button>\r\n            <button onClick={()=> setFilter('Unread')} >Unread</button>\r\n            <button onClick={()=> setFilter( 'Important')}>Important</button>\r\n        </div>\r\n\r\n        <div>\r\n           {  filteredMessage.map((item) =>\r\n               <div key={item.id}>\r\n                       <div>\r\n                           <div>\r\n                               <img src={item.imgUrl} alt=\"avatar friend\"/>\r\n                           </div>\r\n                           <div>\r\n                               {item.profile_online ? 'online' : ''}\r\n                           </div>\r\n                       </div>\r\n\r\n                       <div>\r\n                           <div>\r\n                               <div>\r\n                                   {item.name}{item.secondName}\r\n                               </div>\r\n                               <div>\r\n                                   {new Date().toLocaleTimeString()}\r\n                                   <IconButton onClick={() => props.onRemoveDialogueItemsAC(item.id)}\r\n                                               aria-label=\"delete\" color=\"primary\">\r\n                                       <Delete/>\r\n                                   </IconButton>\r\n                               </div>\r\n                           </div>\r\n                           <div>\r\n                               <NavLink exact to={`/WrapMessage${item.id}`}><p>{item.message}</p></NavLink>\r\n                           </div>\r\n                       </div>\r\n\r\n\r\n                   </div>) }\r\n\r\n       </div>\r\n\r\n    </div>\r\n}\r\n\r\nexport default MessageItemsComponent","Q:\\react-incubator\\socialePageRedux\\src\\WrapPage\\Friend\\FriendsComponent.tsx",["116"],"Q:\\react-incubator\\socialePageRedux\\src\\common\\preloader\\Preloader.tsx",[],{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"117","replacedBy":"121"},{"ruleId":"119","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":20,"column":19,"nodeType":"125","messageId":"126","endLine":20,"endColumn":27},{"ruleId":"123","severity":1,"message":"127","line":1,"column":8,"nodeType":"125","messageId":"126","endLine":1,"endColumn":13},{"ruleId":"117","replacedBy":"128"},{"ruleId":"119","replacedBy":"129"},{"ruleId":null,"fatal":true,"severity":2,"message":"130","line":109,"column":14},{"ruleId":"117","replacedBy":"131"},{"ruleId":"119","replacedBy":"132"},{"ruleId":"123","severity":1,"message":"133","line":1,"column":16,"nodeType":"125","messageId":"126","endLine":1,"endColumn":24},{"ruleId":"123","severity":1,"message":"134","line":4,"column":9,"nodeType":"125","messageId":"126","endLine":4,"endColumn":25},{"ruleId":"123","severity":1,"message":"127","line":1,"column":8,"nodeType":"125","messageId":"126","endLine":1,"endColumn":13},{"ruleId":"117","replacedBy":"135"},{"ruleId":"119","replacedBy":"136"},{"ruleId":"123","severity":1,"message":"137","line":1,"column":29,"nodeType":"125","messageId":"126","endLine":1,"endColumn":46},{"ruleId":"123","severity":1,"message":"138","line":3,"column":9,"nodeType":"125","messageId":"126","endLine":3,"endColumn":19},{"ruleId":"123","severity":1,"message":"139","line":4,"column":8,"nodeType":"125","messageId":"126","endLine":4,"endColumn":18},{"ruleId":"123","severity":1,"message":"127","line":1,"column":8,"nodeType":"125","messageId":"126","endLine":1,"endColumn":13},{"ruleId":"117","replacedBy":"140"},{"ruleId":"119","replacedBy":"141"},{"ruleId":"123","severity":1,"message":"137","line":1,"column":16,"nodeType":"125","messageId":"126","endLine":1,"endColumn":33},{"ruleId":"123","severity":1,"message":"142","line":1,"column":35,"nodeType":"125","messageId":"126","endLine":1,"endColumn":44},{"ruleId":"123","severity":1,"message":"143","line":20,"column":12,"nodeType":"125","messageId":"126","endLine":20,"endColumn":20},{"ruleId":"123","severity":1,"message":"144","line":20,"column":22,"nodeType":"125","messageId":"126","endLine":20,"endColumn":33},{"ruleId":"145","severity":1,"message":"146","line":51,"column":37,"nodeType":"147","endLine":51,"endColumn":117},"no-native-reassign",["148"],"no-negated-in-lhs",["149"],["148"],["149"],"@typescript-eslint/no-unused-vars","'setError' is assigned a value but never used.","Identifier","unusedVar","'React' is defined but never used.",["148"],["149"],"Parsing error: Expected corresponding closing tag for JSX fragment.",["148"],["149"],"'useState' is defined but never used.","'ChangeFilterType' is defined but never used.",["148"],["149"],"'FunctionComponent' is defined but never used.","'IconButton' is defined but never used.","'SearchIcon' is defined but never used.",["148"],["149"],"'useEffect' is defined but never used.","'messages' is assigned a value but never used.","'setMessages' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]