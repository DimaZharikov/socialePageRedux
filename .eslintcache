[{"Q:\\react-incubator\\socialePageRedux\\src\\App.tsx":"1","Q:\\react-incubator\\socialePageRedux\\src\\index.tsx":"2","Q:\\react-incubator\\socialePageRedux\\src\\serviceWorker.js":"3","Q:\\react-incubator\\socialePageRedux\\src\\components\\Profile\\ProfileInfo\\ProfileStatusWithHooks.tsx":"4","Q:\\react-incubator\\socialePageRedux\\src\\components\\Profile\\MyPosts\\AddPostForm\\AddPostForm.tsx":"5","Q:\\react-incubator\\socialePageRedux\\src\\api\\api.ts":"6","Q:\\react-incubator\\socialePageRedux\\src\\redux\\redux-store.ts":"7","Q:\\react-incubator\\socialePageRedux\\src\\components\\Login\\LoginPage.tsx":"8","Q:\\react-incubator\\socialePageRedux\\src\\pages\\Chat\\ChatPage.tsx":"9","Q:\\react-incubator\\socialePageRedux\\src\\hoc\\withAuthRedirect.tsx":"10","Q:\\react-incubator\\socialePageRedux\\src\\components\\Dialogs\\Dialogs.tsx":"11","Q:\\react-incubator\\socialePageRedux\\src\\api\\security-api.ts":"12","Q:\\react-incubator\\socialePageRedux\\src\\api\\chat-api.ts":"13","Q:\\react-incubator\\socialePageRedux\\src\\components\\Dialogs\\Message\\Message.tsx":"14","Q:\\react-incubator\\socialePageRedux\\src\\components\\Dialogs\\DialogItem\\DialogItem.tsx":"15","Q:\\react-incubator\\socialePageRedux\\src\\components\\common\\Paginator\\Paginator.tsx":"16","Q:\\react-incubator\\socialePageRedux\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx":"17","Q:\\react-incubator\\socialePageRedux\\src\\components\\Header\\Header.tsx":"18","Q:\\react-incubator\\socialePageRedux\\src\\components\\Dialogs\\DialogsContainer.tsx":"19","Q:\\react-incubator\\socialePageRedux\\src\\components\\Users\\Users.tsx":"20","Q:\\react-incubator\\socialePageRedux\\src\\utils\\validators\\validators.ts":"21","Q:\\react-incubator\\socialePageRedux\\src\\api\\users-api.ts":"22","Q:\\react-incubator\\socialePageRedux\\src\\components\\Users\\UsersSearchForm.tsx":"23","Q:\\react-incubator\\socialePageRedux\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx":"24","Q:\\react-incubator\\socialePageRedux\\src\\components\\Profile\\MyPosts\\MyPosts.tsx":"25","Q:\\react-incubator\\socialePageRedux\\src\\components\\Profile\\ProfileInfo\\ProfileDataForm.tsx":"26","Q:\\react-incubator\\socialePageRedux\\src\\components\\Video\\VideoContainer.tsx":"27","Q:\\react-incubator\\socialePageRedux\\src\\api\\movies-api.ts":"28","Q:\\react-incubator\\socialePageRedux\\src\\components\\Users\\UsersContainer.tsx":"29","Q:\\react-incubator\\socialePageRedux\\src\\components\\Profile\\Profile.tsx":"30","Q:\\react-incubator\\socialePageRedux\\src\\api\\auth-api.ts":"31","Q:\\react-incubator\\socialePageRedux\\src\\hoc\\withSuspense.tsx":"32","Q:\\react-incubator\\socialePageRedux\\src\\api\\profile-api.ts":"33","Q:\\react-incubator\\socialePageRedux\\src\\components\\common\\FormsControls\\FormsControls.tsx":"34","Q:\\react-incubator\\socialePageRedux\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx":"35","Q:\\react-incubator\\socialePageRedux\\src\\Routes\\Routes.tsx":"36","Q:\\react-incubator\\socialePageRedux\\src\\redux\\APP\\app-reducer.ts":"37","Q:\\react-incubator\\socialePageRedux\\src\\redux\\Chat\\chat-reducer.ts":"38","Q:\\react-incubator\\socialePageRedux\\src\\redux\\sidebar-reducer.ts":"39","Q:\\react-incubator\\socialePageRedux\\src\\redux\\Auth\\auth-reducer.ts":"40","Q:\\react-incubator\\socialePageRedux\\src\\components\\Dialogs\\AddMessageForm\\AddMessageForm.tsx":"41","Q:\\react-incubator\\socialePageRedux\\src\\redux\\Movies\\movies-selector.ts":"42","Q:\\react-incubator\\socialePageRedux\\src\\redux\\Movies\\movies-reducer.ts":"43","Q:\\react-incubator\\socialePageRedux\\src\\components\\common\\Preloader\\Preloader.tsx":"44","Q:\\react-incubator\\socialePageRedux\\src\\redux\\Dialogue\\dialogs-reducer.ts":"45","Q:\\react-incubator\\socialePageRedux\\src\\redux\\Auth\\auth-selector.ts":"46","Q:\\react-incubator\\socialePageRedux\\src\\redux\\User\\users-selectors.ts":"47","Q:\\react-incubator\\socialePageRedux\\src\\components\\Users\\User.tsx":"48","Q:\\react-incubator\\socialePageRedux\\src\\redux\\Profile\\profile-reducer.ts":"49","Q:\\react-incubator\\socialePageRedux\\src\\components\\Profile\\ProfileContainer.tsx":"50","Q:\\react-incubator\\socialePageRedux\\src\\utils\\object-helpers.ts":"51","Q:\\react-incubator\\socialePageRedux\\src\\redux\\User\\users-reducer.ts":"52","Q:\\react-incubator\\socialePageRedux\\src\\components\\Video\\DescOfSearch.tsx":"53"},{"size":4210,"mtime":1613718015005,"results":"54","hashOfConfig":"55"},{"size":477,"mtime":1609323776000,"results":"56","hashOfConfig":"55"},{"size":4948,"mtime":1609323776000,"results":"57","hashOfConfig":"55"},{"size":1181,"mtime":1609323776000,"results":"58","hashOfConfig":"55"},{"size":950,"mtime":1609323776000,"results":"59","hashOfConfig":"55"},{"size":772,"mtime":1613664688548,"results":"60","hashOfConfig":"55"},{"size":1492,"mtime":1613677573303,"results":"61","hashOfConfig":"55"},{"size":2367,"mtime":1613674566965,"results":"62","hashOfConfig":"55"},{"size":2842,"mtime":1613674556626,"results":"63","hashOfConfig":"55"},{"size":892,"mtime":1613680530483,"results":"64","hashOfConfig":"55"},{"size":1303,"mtime":1613674557785,"results":"65","hashOfConfig":"55"},{"size":252,"mtime":1609323776000,"results":"66","hashOfConfig":"55"},{"size":2588,"mtime":1609323776000,"results":"67","hashOfConfig":"55"},{"size":246,"mtime":1609323776000,"results":"68","hashOfConfig":"55"},{"size":405,"mtime":1609323776000,"results":"69","hashOfConfig":"55"},{"size":1772,"mtime":1609323776000,"results":"70","hashOfConfig":"55"},{"size":464,"mtime":1609323776000,"results":"71","hashOfConfig":"55"},{"size":1920,"mtime":1613675333826,"results":"72","hashOfConfig":"55"},{"size":537,"mtime":1613674540095,"results":"73","hashOfConfig":"55"},{"size":3314,"mtime":1613674537861,"results":"74","hashOfConfig":"55"},{"size":389,"mtime":1609323776000,"results":"75","hashOfConfig":"55"},{"size":644,"mtime":1609323776000,"results":"76","hashOfConfig":"55"},{"size":1842,"mtime":1613674563307,"results":"77","hashOfConfig":"55"},{"size":550,"mtime":1609323776000,"results":"78","hashOfConfig":"55"},{"size":1218,"mtime":1609323776000,"results":"79","hashOfConfig":"55"},{"size":1875,"mtime":1609323776000,"results":"80","hashOfConfig":"55"},{"size":2515,"mtime":1613741365150,"results":"81","hashOfConfig":"55"},{"size":590,"mtime":1613731645098,"results":"82","hashOfConfig":"55"},{"size":505,"mtime":1613674568272,"results":"83","hashOfConfig":"55"},{"size":889,"mtime":1609323776000,"results":"84","hashOfConfig":"55"},{"size":744,"mtime":1609323776000,"results":"85","hashOfConfig":"55"},{"size":281,"mtime":1613718314199,"results":"86","hashOfConfig":"55"},{"size":1079,"mtime":1609323776000,"results":"87","hashOfConfig":"55"},{"size":1845,"mtime":1609323776000,"results":"88","hashOfConfig":"55"},{"size":3127,"mtime":1609323776000,"results":"89","hashOfConfig":"55"},{"size":1900,"mtime":1613717953992,"results":"90","hashOfConfig":"55"},{"size":914,"mtime":1613674569475,"results":"91","hashOfConfig":"55"},{"size":2982,"mtime":1613674540810,"results":"92","hashOfConfig":"55"},{"size":182,"mtime":1609323776000,"results":"93","hashOfConfig":"55"},{"size":2834,"mtime":1613674553560,"results":"94","hashOfConfig":"55"},{"size":1096,"mtime":1609323776000,"results":"95","hashOfConfig":"55"},{"size":238,"mtime":1613674543563,"results":"96","hashOfConfig":"55"},{"size":1820,"mtime":1613740896429,"results":"97","hashOfConfig":"55"},{"size":275,"mtime":1609323776000,"results":"98","hashOfConfig":"55"},{"size":1309,"mtime":1613674572307,"results":"99","hashOfConfig":"55"},{"size":237,"mtime":1613675333908,"results":"100","hashOfConfig":"55"},{"size":901,"mtime":1613674543728,"results":"101","hashOfConfig":"55"},{"size":1957,"mtime":1609323776000,"results":"102","hashOfConfig":"55"},{"size":3730,"mtime":1613674543299,"results":"103","hashOfConfig":"55"},{"size":2682,"mtime":1613674545712,"results":"104","hashOfConfig":"55"},{"size":258,"mtime":1609323776000,"results":"105","hashOfConfig":"55"},{"size":4723,"mtime":1613674542651,"results":"106","hashOfConfig":"55"},{"size":664,"mtime":1613719231847,"results":"107","hashOfConfig":"55"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1cbh7fb",{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"112"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"112"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"150"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"112"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"167"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"171"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"112"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"118"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"112"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"112"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"112"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"171"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"112"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"144"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"112"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"112"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"Q:\\react-incubator\\socialePageRedux\\src\\App.tsx",[],"Q:\\react-incubator\\socialePageRedux\\src\\index.tsx",[],["238","239"],"Q:\\react-incubator\\socialePageRedux\\src\\serviceWorker.js",[],["240","241"],"Q:\\react-incubator\\socialePageRedux\\src\\components\\Profile\\ProfileInfo\\ProfileStatusWithHooks.tsx",[],["242","243"],"Q:\\react-incubator\\socialePageRedux\\src\\components\\Profile\\MyPosts\\AddPostForm\\AddPostForm.tsx",[],["244","245"],"Q:\\react-incubator\\socialePageRedux\\src\\api\\api.ts",[],"Q:\\react-incubator\\socialePageRedux\\src\\redux\\redux-store.ts",[],"Q:\\react-incubator\\socialePageRedux\\src\\components\\Login\\LoginPage.tsx",["246"],"Q:\\react-incubator\\socialePageRedux\\src\\pages\\Chat\\ChatPage.tsx",["247","248","249","250"],"import React, {useEffect, useRef, useState} from 'react'\nimport {ChatMessageAPIType} from '../../api/chat-api'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {sendMessage, startMessagesListening, stopMessagesListening} from '../../redux/Chat/chat-reducer'\nimport {AppStateType} from '../../redux/redux-store'\n\n\nconst ChatPage: React.FC = () => {\n    return <div>\n        <Chat/>\n    </div>\n}\n\nconst Chat: React.FC = () => {\n\n    const dispatch = useDispatch()\n\n\n    const status = useSelector((state: AppStateType) => state.chat.status)\n\n    useEffect(() => {\n        dispatch(startMessagesListening())\n        return () => {\n            dispatch(stopMessagesListening())\n        }\n    }, [])\n\n    return <div>\n        {status === 'error' && <div>Some error occured. Please refresh the page</div>}\n        <>\n            <Messages/>\n            <AddMessageForm/>\n        </>\n    </div>\n}\n\nconst Messages: React.FC<{}> = ({}) => {\n    const messages = useSelector((state: AppStateType) => state.chat.messages)\n    const messagesAnchorRef = useRef<HTMLDivElement>(null);\n    const [isAutoScroll, setIsAutoScroll] = useState(true)\n\n    const scrollHandler = (e: React.UIEvent<HTMLDivElement, UIEvent>) => {\n        const element = e.currentTarget;\n        if (Math.abs( (element.scrollHeight - element.scrollTop) - element.clientHeight ) < 300)\n        {\n            !isAutoScroll && setIsAutoScroll(true)\n        } else {\n            isAutoScroll && setIsAutoScroll(false)\n        }\n    }\n\n    useEffect(() => {\n        if (isAutoScroll) {\n            messagesAnchorRef.current?.scrollIntoView({behavior: 'smooth'})\n        }\n    }, [messages])\n\n    return <div style={{height: '400px', overflowY: 'auto'}} onScroll={scrollHandler}>\n        {messages.map((m, index) => <Message key={m.id} message={m}/>)}\n        <div ref={messagesAnchorRef}></div>\n    </div>\n}\n\n\nconst Message: React.FC<{ message: ChatMessageAPIType }> = React.memo( ({message}) => {\n    console.log(\">>>>>>Message\")\n    return <div>\n        <img src={message.photo} style={{width: '30px'}}/> <b>{message.userName}</b>\n        <br/>\n        {message.message}\n        <hr/>\n    </div>\n})\n\n\nconst AddMessageForm: React.FC<{}> = () => {\n    const [message, setMessage] = useState('')\n    const dispatch = useDispatch()\n\n    const status = useSelector((state: AppStateType) => state.chat.status)\n\n\n    const sendMessageHandler = () => {\n        if (!message) {\n            return\n        }\n        dispatch(sendMessage(message))\n        setMessage('')\n    }\n\n    return <div>\n        <div>\n            <textarea onChange={(e) => setMessage(e.currentTarget.value)} value={message}></textarea>\n        </div>\n        <div>\n            <button disabled={status !== 'ready'} onClick={sendMessageHandler}>Send</button>\n        </div>\n    </div>\n}\n\nexport default ChatPage\n","Q:\\react-incubator\\socialePageRedux\\src\\hoc\\withAuthRedirect.tsx",[],"Q:\\react-incubator\\socialePageRedux\\src\\components\\Dialogs\\Dialogs.tsx",["251"],"import React from 'react';\nimport s from './Dialogs.module.css';\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport {Redirect} from \"react-router-dom\";\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\nimport {InitialStateType} from '../../redux/Dialogue/dialogs-reducer';\n\ntype PropsType = {\n    dialogsPage: InitialStateType\n    sendMessage: (messageText: string) => void\n}\n\nexport type NewMessageFormValuesType = {\n    newMessageBody: string\n}\n\nconst Dialogs: React.FC<PropsType> = (props) => {\n    let state = props.dialogsPage;\n\n    let dialogsElements = state.dialogs.map( d => <DialogItem name={d.name} key={d.id} id={d.id} />  );\n    let messagesElements = state.messages.map( m => <Message message={m.message} key={m.id} /> );\n\n    let addNewMessage = (values: NewMessageFormValuesType) => {\n        props.sendMessage(values.newMessageBody);\n    }\n\n    return (\n        <div className={s.dialogs}>\n            <div className={s.dialogsItems}>\n                { dialogsElements }\n            </div>\n            <div className={s.messages}>\n                <div>{ messagesElements }</div>\n            </div>\n            <AddMessageForm onSubmit={addNewMessage} />\n        </div>\n    )\n}\n\nexport default Dialogs;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","Q:\\react-incubator\\socialePageRedux\\src\\api\\security-api.ts",[],"Q:\\react-incubator\\socialePageRedux\\src\\api\\chat-api.ts",[],"Q:\\react-incubator\\socialePageRedux\\src\\components\\Dialogs\\Message\\Message.tsx",[],"Q:\\react-incubator\\socialePageRedux\\src\\components\\Dialogs\\DialogItem\\DialogItem.tsx",[],["252","253"],"Q:\\react-incubator\\socialePageRedux\\src\\components\\common\\Paginator\\Paginator.tsx",[],"Q:\\react-incubator\\socialePageRedux\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx",["254"],"import React from 'react';\nimport s from './Post.module.css';\n\ntype PropsType = {\n    message: string\n    likesCount: number\n}\n\nconst Post: React.FC<PropsType> = (props) => {\n  return (\n    <div className={s.item}>\n      <img src='https://movies4maniacs.liberty.me/wp-content/uploads/sites/1218/2015/09/avatarsucks.jpg' />\n        { props.message }\n          <div>\n        <span>like</span> { props.likesCount }\n      </div>\n    </div>\n  )\n}\n\nexport default Post;\n",["255","256"],"Q:\\react-incubator\\socialePageRedux\\src\\components\\Header\\Header.tsx",[],"Q:\\react-incubator\\socialePageRedux\\src\\components\\Dialogs\\DialogsContainer.tsx",[],"Q:\\react-incubator\\socialePageRedux\\src\\components\\Users\\Users.tsx",["257","258"],"import React, {FC, useEffect} from 'react'\nimport Paginator from '../common/Paginator/Paginator'\nimport User from './User'\nimport {UsersSearchForm} from './UsersSearchForm'\nimport {FilterType, requestUsers} from '../../redux/User/users-reducer'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {\n    getCurrentPage,\n    getFollowingInProgress,\n    getPageSize,\n    getTotalUsersCount,\n    getUsers,\n    getUsersFilter\n} from '../../redux/User/users-selectors'\nimport {useHistory} from 'react-router-dom'\nimport * as queryString from 'querystring'\n\ntype PropsType = {}\n\ntype QueryParamsType = { term?: string; page?: string; friend?: string }\nexport const Users: FC<PropsType> = (props) => {\n\n    const users = useSelector(getUsers)\n    const totalUsersCount = useSelector(getTotalUsersCount)\n    const currentPage = useSelector(getCurrentPage)\n    const pageSize = useSelector(getPageSize)\n    const filter = useSelector(getUsersFilter)\n    const followingInProgress = useSelector(getFollowingInProgress)\n\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n    useEffect(() => {\n        const parsed = queryString.parse(history.location.search.substr(1)) as QueryParamsType\n\n        let actualPage = currentPage\n        let actualFilter = filter\n\n        if (!!parsed.page) actualPage = Number(parsed.page)\n\n\n        if (!!parsed.term) actualFilter = {...actualFilter, term: parsed.term as string}\n\n        switch(parsed.friend) {\n            case \"null\":\n                actualFilter = {...actualFilter, friend: null}\n                break;\n            case \"true\":\n                actualFilter = {...actualFilter, friend: true}\n                break;\n            case \"false\":\n                actualFilter = {...actualFilter, friend: false}\n                break;\n        }\n\n        dispatch(requestUsers(actualPage, pageSize, actualFilter))\n    }, [])\n\n    useEffect(() => {\n        const query: QueryParamsType = {}\n\n        if (!!filter.term) query.term = filter.term\n        if (filter.friend !== null) query.friend = String(filter.friend)\n        if (currentPage !== 1) query.page = String(currentPage)\n\n        history.push({\n            pathname: '/developers',\n            search: queryString.stringify(query)\n        })\n    }, [filter, currentPage])\n\n\n    const onPageChanged = (pageNumber: number) => {\n        dispatch(requestUsers(pageNumber, pageSize, filter))\n    }\n    const onFilterChanged = (filter: FilterType) => {\n        dispatch(requestUsers(1, pageSize, filter))\n    }\n    const follow = (userId: number) => {\n        dispatch(follow(userId));\n    }\n    const unfollow = (userId: number) => {\n        dispatch(unfollow(userId));\n    }\n\n    return <div>\n\n        <UsersSearchForm onFilterChanged={onFilterChanged}/>\n\n        <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\n                   totalItemsCount={totalUsersCount} pageSize={pageSize}/>\n        <div>\n            {\n                users.map(u => <User user={u}\n                                     followingInProgress={followingInProgress}\n                                     key={u.id}\n                                     unfollow={unfollow}\n                                     follow={follow}\n                    />\n                )\n            }\n        </div>\n    </div>\n}\n","Q:\\react-incubator\\socialePageRedux\\src\\utils\\validators\\validators.ts",[],"Q:\\react-incubator\\socialePageRedux\\src\\api\\users-api.ts",[],"Q:\\react-incubator\\socialePageRedux\\src\\components\\Users\\UsersSearchForm.tsx",[],"Q:\\react-incubator\\socialePageRedux\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx",["259"],"import React from 'react';\nimport {actions} from \"../../../redux/profile-reducer\";\nimport MyPosts, {DispatchPropsType, MapPropsType} from \"./MyPosts\";\nimport {connect} from \"react-redux\";\nimport {AppStateType} from '../../../redux/redux-store';\n\nconst mapStateToProps = (state: AppStateType) => {\n    return {\n        posts: state.profilePage.posts\n    }\n}\n\nconst MyPostsContainer = connect<MapPropsType, DispatchPropsType, {}, AppStateType>(mapStateToProps, {\n    addPost: actions.addPostActionCreator\n})(MyPosts);\n\nexport default MyPostsContainer;\n",["260","261"],"Q:\\react-incubator\\socialePageRedux\\src\\components\\Profile\\MyPosts\\MyPosts.tsx",["262","263","264","265","266"],"import React from 'react';\nimport s from './MyPosts.module.css';\nimport Post from './Post/Post';\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\nimport AddPostForm, {AddPostFormValuesType} from './AddPostForm/AddPostForm';\nimport {PostType} from '../../../types/types';\n\n\nexport type MapPropsType = {\n    posts: Array<PostType>\n}\nexport type DispatchPropsType = {\n    addPost: (newPostText: string) => void\n}\n\nconst MyPosts: React.FC<MapPropsType & DispatchPropsType> = props => {\n    let postsElements =\n        [...props.posts]\n            .reverse()\n            .map(p => <Post key={p.id} message={p.message} likesCount={p.likesCount}/>);\n\n    let onAddPost = (values: AddPostFormValuesType) => {\n        props.addPost(values.newPostText);\n    }\n\n    return (\n        <div className={s.postsBlock}>\n            <h3>My posts</h3>\n            <AddPostForm onSubmit={onAddPost}/>\n            <div className={s.posts}>\n                {postsElements}\n            </div>\n        </div>\n    )\n}\n\nconst MyPostsMemorized = React.memo(MyPosts);\n\nexport default MyPostsMemorized;\n",["267","268"],"Q:\\react-incubator\\socialePageRedux\\src\\components\\Profile\\ProfileInfo\\ProfileDataForm.tsx",[],"Q:\\react-incubator\\socialePageRedux\\src\\components\\Video\\VideoContainer.tsx",["269","270","271"],"Q:\\react-incubator\\socialePageRedux\\src\\api\\movies-api.ts",[],"Q:\\react-incubator\\socialePageRedux\\src\\components\\Users\\UsersContainer.tsx",[],"Q:\\react-incubator\\socialePageRedux\\src\\components\\Profile\\Profile.tsx",[],"Q:\\react-incubator\\socialePageRedux\\src\\api\\auth-api.ts",[],"Q:\\react-incubator\\socialePageRedux\\src\\hoc\\withSuspense.tsx",[],"Q:\\react-incubator\\socialePageRedux\\src\\api\\profile-api.ts",[],"Q:\\react-incubator\\socialePageRedux\\src\\components\\common\\FormsControls\\FormsControls.tsx",["272"],"import React from \"react\"\nimport styles from \"./FormsControls.module.css\"\nimport {FieldValidatorType} from \"../../../utils/validators/validators\"\nimport {Field, WrappedFieldProps} from \"redux-form\"\nimport {WrappedFieldMetaProps} from 'redux-form/lib/Field'\nimport {LoginFormValuesType} from '../../Login/LoginPage';\n\ntype FormControlPropsType = {\n    meta: WrappedFieldMetaProps\n}\n\nconst FormControl: React.FC<FormControlPropsType> = ({meta: {touched, error}, children}) => {\n    const hasError = touched && error;\n    return (\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\n            <div>\n                {children}\n            </div>\n            {hasError && <span>{error}</span>}\n        </div>\n    )\n}\n\nexport const Textarea: React.FC<WrappedFieldProps> = (props) => {\n    //const {input, meta, child, ...restProps} = props;\n    const {input, meta, ...restProps} = props;\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\n}\n\nexport const Input: React.FC<WrappedFieldProps> = (props) => {\n    //const {input, meta, child, ...restProps} = props;\n    const {input, meta, ...restProps} = props;\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\n}\n\nexport function createField<FormKeysType extends string>(placeholder: string | undefined,\n                            name: FormKeysType,\n                            validators: Array<FieldValidatorType>,\n                            component: React.FC<WrappedFieldProps>,\n                            props = {}, text = \"\") {\n    return <div>\n        <Field placeholder={placeholder} name={name}\n               validate={validators}\n               component={component}\n               {...props}\n        /> {text}\n    </div>\n}\n\nexport type GetStringKeys<T> = Extract<keyof T, string>\n","Q:\\react-incubator\\socialePageRedux\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx",["273"],"import React, {ChangeEvent, useState} from 'react';\nimport s from './ProfileInfo.module.css';\nimport Preloader from \"../../common/Preloader/Preloader\";\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\nimport userPhoto from \"../../../assets/images/user.png\";\nimport ProfileDataForm from \"./ProfileDataForm\";\nimport {ContactsType, ProfileType} from '../../../types/types';\n\ntype PropsType = {\n    profile: ProfileType | null\n    status: string\n    updateStatus: (status: string) => void\n    isOwner: boolean\n    savePhoto: (file: File) => void\n    saveProfile: (profile: ProfileType) => Promise<any>\n}\n\nconst ProfileInfo: React.FC<PropsType> = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\n\n    let [editMode, setEditMode] = useState(false);\n\n    if (!profile) {\n        return <Preloader/>\n    }\n\n    const onMainPhotoSelected = (e: ChangeEvent<HTMLInputElement>) => {\n        if (e.target.files && e.target.files.length) {\n            savePhoto(e.target.files[0]);\n        }\n    }\n\n    const onSubmit = (formData: ProfileType) => {\n        // todo: remove then\n        saveProfile(formData).then(\n            () => {\n                setEditMode(false);\n            }\n        );\n    }\n\n    return (\n        <div>\n            <div className={s.descriptionBlock}>\n                <img src={profile.photos.large || userPhoto} className={s.mainPhoto}/>\n                {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected}/>}\n\n                { editMode\n                    ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/>\n                    : <ProfileData goToEditMode={() => {setEditMode(true)} } profile={profile} isOwner={isOwner}/> }\n\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\n            </div>\n        </div>\n    )\n}\n\ntype ProfileDataPropsType = {\n    profile: ProfileType\n    isOwner: boolean\n    goToEditMode: () => void\n}\nconst ProfileData: React.FC<ProfileDataPropsType> = ({profile, isOwner, goToEditMode}) => {\n    return <div>\n        {isOwner && <div><button onClick={goToEditMode}>edit</button></div>}\n        <div>\n            <b>Full name</b>: {profile.fullName}\n        </div>\n        <div>\n            <b>Looking for a job</b>: {profile.lookingForAJob ? \"yes\" : \"no\"}\n        </div>\n        {profile.lookingForAJob &&\n        <div>\n            <b>My professional skills</b>: {profile.lookingForAJobDescription}\n        </div>\n        }\n\n        <div>\n            <b>About me</b>: {profile.aboutMe}\n        </div>\n        <div>\n            <b>Contacts</b>: {\n            Object\n                .keys(profile.contacts)\n                .map((key)  => {\n            return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key as keyof ContactsType]}/>\n        })}\n        </div>\n    </div>\n}\n\n\ntype ContactsPropsType = {\n    contactTitle: string\n    contactValue: string\n}\nconst Contact: React.FC<ContactsPropsType> = ({contactTitle, contactValue}) => {\n    return <div className={s.contact}><b>{contactTitle}</b>: {contactValue}</div>\n}\n\nexport default ProfileInfo;\n","Q:\\react-incubator\\socialePageRedux\\src\\Routes\\Routes.tsx",[],"Q:\\react-incubator\\socialePageRedux\\src\\redux\\APP\\app-reducer.ts",[],"Q:\\react-incubator\\socialePageRedux\\src\\redux\\Chat\\chat-reducer.ts",["274","275","276","277","278","279"],"import {ResultCodeForCapcthaEnum, ResultCodesEnum} from '../../api/api'\nimport {stopSubmit} from 'redux-form'\nimport {authAPI} from '../../api/auth-api'\nimport {securityAPI} from '../../api/security-api'\nimport {BaseThunkType, InferActionsTypes} from '../redux-store'\nimport {Action, Dispatch} from 'redux'\nimport {FormAction} from 'redux-form/lib/actions'\nimport {chatAPI, ChatMessageAPIType, StatusType} from '../../api/chat-api'\nimport {v1} from 'uuid'\n\ntype ChatMessageType = ChatMessageAPIType & {id: string}\n\nlet initialState = {\n    messages: [] as ChatMessageType[],\n    status: 'pending' as StatusType\n}\n\nconst chatReducer = (state = initialState, action: ActionsType): InitialStateType => {\n    switch (action.type) {\n        case 'SN/chat/MESSAGES_RECEVIED':\n            return {\n                ...state,\n                messages: [...state.messages, ...action.payload.messages.map( m => ({...m, id: v1() }))]\n                    .filter((m, index, array) => index >= array.length - 100)\n            }\n        case 'SN/chat/STATUS_CHANGED':\n            return {\n                ...state,\n                status: action.payload.status\n            }\n        default:\n            return state\n    }\n}\n\nexport const actions = {\n    messagesReceived: (messages: ChatMessageAPIType[]) => ({\n        type: 'SN/chat/MESSAGES_RECEVIED', payload: {messages}\n    } as const),\n    statusChanged: (status: StatusType) => ({\n        type: 'SN/chat/STATUS_CHANGED', payload: {status}\n    } as const)\n}\n\nlet _newMessageHandler: ((messages: ChatMessageAPIType[]) => void) | null = null\nconst newMessageHandlerCreator = (dispatch: Dispatch) => {\n    if (_newMessageHandler === null) {\n        _newMessageHandler = (messages) => {\n            dispatch(actions.messagesReceived(messages))\n        }\n    }\n    return _newMessageHandler\n}\n\nlet _statusChangedHandler: ((status: StatusType) => void) | null = null\nconst statusChangedHandlerCreator = (dispatch: Dispatch) => {\n    if (_statusChangedHandler === null) {\n        _statusChangedHandler = (status) => {\n            dispatch(actions.statusChanged(status))\n        }\n    }\n    return _statusChangedHandler\n}\n\nexport const startMessagesListening = (): ThunkType => async (dispatch) => {\n    chatAPI.start()\n    chatAPI.subscribe('messages-received', newMessageHandlerCreator(dispatch))\n    chatAPI.subscribe('status-changed', statusChangedHandlerCreator(dispatch))\n\n}\nexport const stopMessagesListening = (): ThunkType => async (dispatch) => {\n    chatAPI.unsubscribe('messages-received', newMessageHandlerCreator(dispatch))\n    chatAPI.unsubscribe('status-changed', statusChangedHandlerCreator(dispatch))\n    chatAPI.stop()\n}\n\nexport const sendMessage = (message: string): ThunkType => async (dispatch) => {\n    chatAPI.sendMessage(message)\n}\n\n\nexport default chatReducer\n\nexport type InitialStateType = typeof initialState;\ntype ActionsType = InferActionsTypes<typeof actions>\ntype ThunkType = BaseThunkType<ActionsType | FormAction>\n","Q:\\react-incubator\\socialePageRedux\\src\\redux\\sidebar-reducer.ts",["280"],"let initialState = {}\ntype InitialStateType = typeof initialState\nconst sidebarReducer = (state = initialState, action: any) => {\n    return state;\n}\n\nexport default sidebarReducer;\n","Q:\\react-incubator\\socialePageRedux\\src\\redux\\Auth\\auth-reducer.ts",["281"],"import {ResultCodeForCapcthaEnum, ResultCodesEnum} from \"../../api/api\";\nimport {stopSubmit} from \"redux-form\";\nimport {authAPI} from '../../api/auth-api';\nimport {securityAPI} from '../../api/security-api';\nimport {BaseThunkType, InferActionsTypes} from '../redux-store';\nimport {Action} from 'redux';\nimport {FormAction} from 'redux-form/lib/actions';\n\nlet initialState = {\n    userId: null as (number | null),\n    email: null as string | null,\n    login: null as string | null,\n    isAuth: false,\n    captchaUrl: null as string | null// if null, then captcha is not required\n};\n\nconst authReducer = (state = initialState, action: ActionsType): InitialStateType => {\n    switch (action.type) {\n        case 'SN/auth/SET_USER_DATA':\n        case 'SN/auth/GET_CAPTCHA_URL_SUCCESS':\n            return {\n                ...state,\n                ...action.payload\n            }\n        default:\n            return state;\n    }\n}\n\nexport const actions = {\n    setAuthUserData: (userId: number | null, email: string | null, login: string | null, isAuth: boolean) => ({\n        type: 'SN/auth/SET_USER_DATA', payload: {userId, email, login, isAuth}\n    } as const),\n    getCaptchaUrlSuccess: (captchaUrl: string) => ({\n        type: 'SN/auth/GET_CAPTCHA_URL_SUCCESS', payload: {captchaUrl}\n    } as const)\n}\n\nexport const getAuthUserData = (): ThunkType => async (dispatch) => {\n    let meData = await authAPI.me()\n    if (meData.resultCode === ResultCodesEnum.Success) {\n        let {id, login, email} = meData.data;\n        dispatch(actions.setAuthUserData(id, email, login, true))\n    }\n}\n\nexport const login = (email: string, password: string, rememberMe: boolean, captcha: string): ThunkType => async (dispatch) => {\n    let data = await authAPI.login(email, password, rememberMe, captcha);\n    if (data.resultCode === ResultCodesEnum.Success) {\n        // success, get auth data\n        dispatch(getAuthUserData())\n    } else {\n        if (data.resultCode === ResultCodeForCapcthaEnum.CaptchaIsRequired) {\n            dispatch(getCaptchaUrl());\n        }\n\n        let message = data.messages.length > 0 ? data.messages[0] : \"Some error\";\n        dispatch(stopSubmit(\"login\", {_error: message}));\n    }\n}\n\nexport const getCaptchaUrl = (): ThunkType => async (dispatch) => {\n    const data = await securityAPI.getCaptchaUrl()\n    const captchaUrl = data.url\n    dispatch(actions.getCaptchaUrlSuccess(captchaUrl))\n}\n\nexport const logout = (): ThunkType => async (dispatch: any) => {\n    let response = await authAPI.logout()\n\n    if (response.data.resultCode === 0) {\n        dispatch(actions.setAuthUserData(null, null, null, false))\n    }\n}\n\nexport default authReducer;\n\nexport type InitialStateType = typeof initialState;\ntype ActionsType = InferActionsTypes<typeof actions>\ntype ThunkType = BaseThunkType<ActionsType | FormAction>\n","Q:\\react-incubator\\socialePageRedux\\src\\components\\Dialogs\\AddMessageForm\\AddMessageForm.tsx",["282","283","284"],"import React from 'react';\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\nimport {createField, Input, Textarea} from '../../common/FormsControls/FormsControls';\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\nimport {NewMessageFormValuesType} from '../Dialogs';\nimport {LoginFormValuesType} from '../../Login/LoginPage';\n\nconst maxLength50 = maxLengthCreator(50);\n\ntype NewMessageFormValuesKeysType = Extract<keyof NewMessageFormValuesType, string>\ntype PropsType = {}\n\nconst AddMessageForm: React.FC<InjectedFormProps<NewMessageFormValuesType, PropsType> & PropsType>\n    = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                {createField<NewMessageFormValuesKeysType>(\"Enter your message\", 'newMessageBody', [required, maxLength50], Textarea)}\n            </div>\n            <div>\n                <button>Send</button>\n            </div>\n        </form>\n    )\n}\n\nexport default reduxForm<NewMessageFormValuesType>({form: 'dialog-add-message-form'})(AddMessageForm);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","Q:\\react-incubator\\socialePageRedux\\src\\redux\\Movies\\movies-selector.ts",[],"Q:\\react-incubator\\socialePageRedux\\src\\redux\\Movies\\movies-reducer.ts",[],"Q:\\react-incubator\\socialePageRedux\\src\\components\\common\\Preloader\\Preloader.tsx",["285","286"],"import React from 'react';\nimport preloader from \"../../../assets/images/preloader.svg\";\n\ntype PropsType = {\n}\n\nlet Preloader: React.FC = () => {\n    return <div  style={ { backgroundColor: 'white' } }>\n        <img src={preloader} />\n    </div>\n}\n\nexport default Preloader;\n","Q:\\react-incubator\\socialePageRedux\\src\\redux\\Dialogue\\dialogs-reducer.ts",[],"Q:\\react-incubator\\socialePageRedux\\src\\redux\\Auth\\auth-selector.ts",[],"Q:\\react-incubator\\socialePageRedux\\src\\redux\\User\\users-selectors.ts",[],"Q:\\react-incubator\\socialePageRedux\\src\\components\\Users\\User.tsx",["287"],"import React from 'react'\nimport styles from './users.module.css'\nimport userPhoto from '../../assets/images/user.png'\nimport {NavLink} from 'react-router-dom'\nimport {UserType} from '../../types/types'\n\ntype PropsType = {\n    user: UserType\n    followingInProgress: Array<number>\n    unfollow: (userId: number) => void\n    follow: (userId: number) => void\n}\n\nconst User: React.FC<PropsType> = ({user, followingInProgress, unfollow, follow}) => {\n    return (\n        <div>\n                <span>\n                    <div>\n                       <NavLink to={'/profile/' + user.id}>\n                        <img src={user.photos.small != null ? user.photos.small : userPhoto}\n                             className={styles.userPhoto}/>\n                       </NavLink>\n                    </div>\n                    <div>\n                        {user.followed\n                            ? <button disabled={followingInProgress\n                                .some(id => id === user.id)}\n                                      onClick={() => {\n                                          unfollow(user.id)\n                                      }}>\n                                Unfollow</button>\n                            : <button disabled={followingInProgress.some(id => id === user.id)}\n                                      onClick={() => {\n                                          follow(user.id)\n                                      }}>\n                                Follow</button>}\n\n                    </div>\n                </span>\n            <span>\n                    <span>\n                        <div>{user.name}</div>\n                        <div>{user.status}</div>\n                    </span>\n                    <span>\n                        <div>{'user.location.country'}</div>\n                        <div>{'user.location.city'}</div>\n                    </span>\n                </span>\n        </div>)\n}\n\nexport default User\n","Q:\\react-incubator\\socialePageRedux\\src\\redux\\Profile\\profile-reducer.ts",["288","289"],"import {FormAction, stopSubmit} from \"redux-form\";\nimport {PhotosType, PostType, ProfileType} from '../../types/types';\nimport {usersAPI} from '../../api/users-api';\nimport {profileAPI} from '../../api/profile-api';\nimport {BaseThunkType, InferActionsTypes} from '../redux-store';\n\nlet initialState = {\n    posts: [\n        {id: 1, message: 'Hi, how are you?', likesCount: 12},\n        {id: 2, message: 'It\\'s my first post', likesCount: 11},\n        {id: 3, message: 'Blabla', likesCount: 11},\n        {id: 4, message: 'Dada', likesCount: 11}\n    ] as Array<PostType>,\n    profile: null as ProfileType | null,\n    status: '',\n}\n\nconst profileReducer = (state = initialState, action: ActionsType): InitialStateType => {\n\n    switch (action.type) {\n        case 'SN/PROFILE/ADD-POST': {\n            let newPost = {\n                id: 5,\n                message: action.newPostText,\n                likesCount: 0\n            };\n            return {\n                ...state,\n                posts: [...state.posts, newPost],\n            };\n        }\n        case 'SN/PROFILE/SET_STATUS': {\n            return {\n                ...state,\n                status: action.status\n            }\n        }\n        case 'SN/PROFILE/SET_USER_PROFILE': {\n            return {...state, profile: action.profile}\n        }\n\n        case 'SN/PROFILE/DELETE_POST':\n            return {...state, posts: state.posts.filter(p => p.id != action.postId)}\n\n        case 'SN/PROFILE/SAVE_PHOTO_SUCCESS':\n            return {...state, profile: {...state.profile, photos: action.photos} as ProfileType}\n        default:\n            return state;\n    }\n}\n\n\nexport const actions = {\n    addPostActionCreator: (newPostText: string) => ({type: 'SN/PROFILE/ADD-POST', newPostText} as const),\n    setUserProfile: (profile: ProfileType) => ({type: 'SN/PROFILE/SET_USER_PROFILE', profile} as const),\n    setStatus: (status: string) => ({type: 'SN/PROFILE/SET_STATUS', status} as const),\n    deletePost: (postId: number) => ({type: 'SN/PROFILE/DELETE_POST', postId} as const),\n    savePhotoSuccess: (photos: PhotosType) => ({type: 'SN/PROFILE/SAVE_PHOTO_SUCCESS', photos} as const)\n}\n\nexport const getUserProfile = (userId: number): ThunkType => async (dispatch) => {\n    const data = await profileAPI.getProfile(userId)\n    dispatch(actions.setUserProfile(data))\n}\n\nexport const getStatus = (userId: number): ThunkType => async (dispatch) => {\n    let data = await profileAPI.getStatus(userId)\n    dispatch(actions.setStatus(data))\n}\n\nexport const updateStatus = (status: string): ThunkType => async (dispatch) => {\n    try {\n        let data = await profileAPI.updateStatus(status)\n\n        if (data.resultCode === 0) {\n            dispatch(actions.setStatus(status))\n        }\n    } catch(error) {\n        //\n    }\n}\n\nexport const savePhoto = (file: File): ThunkType => async (dispatch) => {\n    let data = await profileAPI.savePhoto(file)\n\n    if (data.resultCode === 0) {\n        dispatch(actions.savePhotoSuccess(data.data.photos))\n    }\n}\n\nexport const saveProfile = (profile: ProfileType): ThunkType => async (dispatch, getState) => {\n    const userId = getState().auth.userId\n    const data = await profileAPI.saveProfile(profile)\n\n    if (data.resultCode === 0) {\n        if (userId != null) {\n            dispatch(getUserProfile(userId))\n        } else {\n            throw new Error(\"userId can't be null\")\n        }\n    } else {\n        dispatch(stopSubmit(\"edit-profile\", {_error: data.messages[0] }))\n        return Promise.reject(data.messages[0])\n    }\n}\n\nexport default profileReducer\n\nexport type InitialStateType = typeof initialState\ntype ActionsType = InferActionsTypes<typeof actions>\ntype ThunkType = BaseThunkType<ActionsType | FormAction>\n","Q:\\react-incubator\\socialePageRedux\\src\\components\\Profile\\ProfileContainer.tsx",["290","291"],"import React from 'react';\nimport Profile from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../redux/Profile/profile-reducer\";\nimport {withRouter, RouteComponentProps} from \"react-router-dom\";\nimport {compose} from \"redux\";\nimport {AppStateType} from '../../redux/redux-store';\nimport {ProfileType} from '../../types/types';\n\ntype MapPropsType = ReturnType<typeof mapStateToProps>\ntype DispatchPropsType = {\n    getUserProfile: (userId: number) => void\n    getStatus: (userId: number) => void\n    updateStatus: (status: string) => void\n    savePhoto: (file: File) => void\n    saveProfile: (profile: ProfileType) => Promise<any>\n}\n\ntype PathParamsType = {\n    userId: string\n}\n\ntype PropsType = MapPropsType & DispatchPropsType & RouteComponentProps<PathParamsType>;\n\nclass ProfileContainer extends React.Component<PropsType> {\n    constructor(props: PropsType) {\n        super(props);\n    }\n\n    refreshProfile() {\n        let userId: number | null = +this.props.match.params.userId;\n        if (!userId) {\n            userId = this.props.authorizedUserId;\n            if (!userId) {\n                // todo: may be replace push with Redirect??\n                this.props.history.push(\"/login\");\n            }\n        }\n\n        if (!userId) {\n            console.error(\"ID should exists in URI params or in state ('authorizedUserId')\");\n        } else {\n            this.props.getUserProfile(userId)\n            this.props.getStatus(userId)\n        }\n    }\n\n    componentDidMount() {\n        this.refreshProfile();\n    }\n\n    componentDidUpdate(prevProps: PropsType, prevState: PropsType) {\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\n            this.refreshProfile();\n        }\n    }\n\n    componentWillUnmount(): void {\n    }\n\n    render() {\n        return (\n            <Profile {...this.props}\n                     isOwner={!this.props.match.params.userId}\n                     profile={this.props.profile}\n                     status={this.props.status}\n                     updateStatus={this.props.updateStatus}\n                     savePhoto={this.props.savePhoto}/>\n        )\n    }\n}\n\nlet mapStateToProps = (state: AppStateType) => {\n    //console.log('mapStateToProps PROFILE')\n    return ({\n        profile: state.profilePage.profile,\n        status: state.profilePage.status,\n        authorizedUserId: state.auth.userId,\n        isAuth: state.auth.isAuth\n    })\n}\n\nexport default compose<React.ComponentType>(\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\n    withRouter\n)(ProfileContainer);\n\n\n\n\n","Q:\\react-incubator\\socialePageRedux\\src\\utils\\object-helpers.ts",[],"Q:\\react-incubator\\socialePageRedux\\src\\redux\\User\\users-reducer.ts",["292","293"],"Q:\\react-incubator\\socialePageRedux\\src\\components\\Video\\DescOfSearch.tsx",[],{"ruleId":"294","replacedBy":"295"},{"ruleId":"296","replacedBy":"297"},{"ruleId":"294","replacedBy":"298"},{"ruleId":"296","replacedBy":"299"},{"ruleId":"294","replacedBy":"300"},{"ruleId":"296","replacedBy":"301"},{"ruleId":"294","replacedBy":"302"},{"ruleId":"296","replacedBy":"303"},{"ruleId":"304","severity":1,"message":"305","line":23,"column":28,"nodeType":"306","endLine":23,"endColumn":51},{"ruleId":"307","severity":1,"message":"308","line":26,"column":8,"nodeType":"309","endLine":26,"endColumn":10,"suggestions":"310"},{"ruleId":"311","severity":1,"message":"312","line":37,"column":33,"nodeType":"313","messageId":"314","endLine":37,"endColumn":35},{"ruleId":"307","severity":1,"message":"315","line":56,"column":8,"nodeType":"309","endLine":56,"endColumn":18,"suggestions":"316"},{"ruleId":"304","severity":1,"message":"305","line":68,"column":9,"nodeType":"306","endLine":68,"endColumn":59},{"ruleId":"317","severity":1,"message":"318","line":5,"column":9,"nodeType":"319","messageId":"320","endLine":5,"endColumn":17},{"ruleId":"294","replacedBy":"298"},{"ruleId":"296","replacedBy":"299"},{"ruleId":"304","severity":1,"message":"305","line":12,"column":7,"nodeType":"306","endLine":12,"endColumn":108},{"ruleId":"294","replacedBy":"321"},{"ruleId":"296","replacedBy":"322"},{"ruleId":"307","severity":1,"message":"323","line":57,"column":8,"nodeType":"309","endLine":57,"endColumn":10,"suggestions":"324"},{"ruleId":"307","severity":1,"message":"325","line":70,"column":8,"nodeType":"309","endLine":70,"endColumn":29,"suggestions":"326"},{"ruleId":"317","severity":1,"message":"327","line":1,"column":8,"nodeType":"319","messageId":"320","endLine":1,"endColumn":13},{"ruleId":"294","replacedBy":"328"},{"ruleId":"296","replacedBy":"329"},{"ruleId":"317","severity":1,"message":"330","line":4,"column":9,"nodeType":"319","messageId":"320","endLine":4,"endColumn":14},{"ruleId":"317","severity":1,"message":"331","line":4,"column":16,"nodeType":"319","messageId":"320","endLine":4,"endColumn":25},{"ruleId":"317","severity":1,"message":"332","line":5,"column":9,"nodeType":"319","messageId":"320","endLine":5,"endColumn":25},{"ruleId":"317","severity":1,"message":"333","line":5,"column":27,"nodeType":"319","messageId":"320","endLine":5,"endColumn":35},{"ruleId":"317","severity":1,"message":"334","line":6,"column":9,"nodeType":"319","messageId":"320","endLine":6,"endColumn":17},{"ruleId":"294","replacedBy":"335"},{"ruleId":"296","replacedBy":"336"},{"ruleId":"317","severity":1,"message":"337","line":1,"column":32,"nodeType":"319","messageId":"320","endLine":1,"endColumn":43},{"ruleId":"307","severity":1,"message":"338","line":26,"column":8,"nodeType":"309","endLine":26,"endColumn":10,"suggestions":"339"},{"ruleId":"307","severity":1,"message":"340","line":28,"column":11,"nodeType":"341","endLine":40,"endColumn":6},{"ruleId":"317","severity":1,"message":"342","line":6,"column":9,"nodeType":"319","messageId":"320","endLine":6,"endColumn":28},{"ruleId":"304","severity":1,"message":"305","line":44,"column":17,"nodeType":"306","endLine":44,"endColumn":87},{"ruleId":"317","severity":1,"message":"343","line":1,"column":9,"nodeType":"319","messageId":"320","endLine":1,"endColumn":33},{"ruleId":"317","severity":1,"message":"344","line":1,"column":35,"nodeType":"319","messageId":"320","endLine":1,"endColumn":50},{"ruleId":"317","severity":1,"message":"345","line":2,"column":9,"nodeType":"319","messageId":"320","endLine":2,"endColumn":19},{"ruleId":"317","severity":1,"message":"346","line":3,"column":9,"nodeType":"319","messageId":"320","endLine":3,"endColumn":16},{"ruleId":"317","severity":1,"message":"347","line":4,"column":9,"nodeType":"319","messageId":"320","endLine":4,"endColumn":20},{"ruleId":"317","severity":1,"message":"348","line":6,"column":9,"nodeType":"319","messageId":"320","endLine":6,"endColumn":15},{"ruleId":"317","severity":1,"message":"349","line":2,"column":6,"nodeType":"319","messageId":"320","endLine":2,"endColumn":22},{"ruleId":"317","severity":1,"message":"348","line":6,"column":9,"nodeType":"319","messageId":"320","endLine":6,"endColumn":15},{"ruleId":"317","severity":1,"message":"330","line":2,"column":9,"nodeType":"319","messageId":"320","endLine":2,"endColumn":14},{"ruleId":"317","severity":1,"message":"350","line":3,"column":22,"nodeType":"319","messageId":"320","endLine":3,"endColumn":27},{"ruleId":"317","severity":1,"message":"342","line":6,"column":9,"nodeType":"319","messageId":"320","endLine":6,"endColumn":28},{"ruleId":"317","severity":1,"message":"351","line":4,"column":6,"nodeType":"319","messageId":"320","endLine":4,"endColumn":15},{"ruleId":"304","severity":1,"message":"305","line":9,"column":9,"nodeType":"306","endLine":9,"endColumn":32},{"ruleId":"304","severity":1,"message":"305","line":20,"column":25,"nodeType":"306","endLine":21,"endColumn":60},{"ruleId":"317","severity":1,"message":"352","line":3,"column":9,"nodeType":"319","messageId":"320","endLine":3,"endColumn":17},{"ruleId":"353","severity":1,"message":"354","line":43,"column":67,"nodeType":"355","messageId":"314","endLine":43,"endColumn":69},{"ruleId":"356","severity":1,"message":"357","line":26,"column":5,"nodeType":"358","messageId":"359","endLine":28,"endColumn":6},{"ruleId":"353","severity":1,"message":"354","line":53,"column":44,"nodeType":"355","messageId":"314","endLine":53,"endColumn":46},{"ruleId":"353","severity":1,"message":"354","line":53,"column":65,"nodeType":"355","messageId":"314","endLine":53,"endColumn":67},{"ruleId":"353","severity":1,"message":"360","line":103,"column":29,"nodeType":"355","messageId":"314","endLine":103,"endColumn":31},"no-native-reassign",["361"],"no-negated-in-lhs",["362"],["361"],["362"],["361"],["362"],["361"],["362"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["363"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","React Hook useEffect has a missing dependency: 'isAutoScroll'. Either include it or remove the dependency array.",["364"],"@typescript-eslint/no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar",["361"],["362"],"React Hook useEffect has missing dependencies: 'currentPage', 'dispatch', 'filter', 'history.location.search', and 'pageSize'. Either include them or remove the dependency array.",["365"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["366"],"'React' is defined but never used.",["361"],["362"],"'Field' is defined but never used.","'reduxForm' is defined but never used.","'maxLengthCreator' is defined but never used.","'required' is defined but never used.","'Textarea' is defined but never used.",["361"],["362"],"'useCallback' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'searchName'. Either include them or remove the dependency array.",["367"],"The 'onScrollHandler' function makes the dependencies of useEffect Hook (at line 47) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'onScrollHandler' in its own useCallback() Hook.","VariableDeclarator","'LoginFormValuesType' is defined but never used.","'ResultCodeForCapcthaEnum' is defined but never used.","'ResultCodesEnum' is defined but never used.","'stopSubmit' is defined but never used.","'authAPI' is defined but never used.","'securityAPI' is defined but never used.","'Action' is defined but never used.","'InitialStateType' is defined but never used.","'Input' is defined but never used.","'PropsType' is defined but never used.","'usersAPI' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","Expected '===' and instead saw '=='.","no-global-assign","no-unsafe-negation",{"desc":"368","fix":"369"},{"desc":"370","fix":"371"},{"desc":"372","fix":"373"},{"desc":"374","fix":"375"},{"desc":"376","fix":"377"},"Update the dependencies array to be: [dispatch]",{"range":"378","text":"379"},"Update the dependencies array to be: [isAutoScroll, messages]",{"range":"380","text":"381"},"Update the dependencies array to be: [currentPage, dispatch, filter, history.location.search, pageSize]",{"range":"382","text":"383"},"Update the dependencies array to be: [filter, currentPage, history]",{"range":"384","text":"385"},"Update the dependencies array to be: [dispatch, searchName]",{"range":"386","text":"387"},[702,704],"[dispatch]",[1644,1654],"[isAutoScroll, messages]",[1880,1882],"[currentPage, dispatch, filter, history.location.search, pageSize]",[2267,2288],"[filter, currentPage, history]",[900,902],"[dispatch, searchName]"]