[{"Q:\\react-incubator\\socialePageRedux\\src\\App.tsx":"1","Q:\\react-incubator\\socialePageRedux\\src\\index.tsx":"2","Q:\\react-incubator\\socialePageRedux\\src\\StaticPage\\Navigation\\Navigation.tsx":"3","Q:\\react-incubator\\socialePageRedux\\src\\WrapPage\\Friend\\FriendsPageComponent.tsx":"4","Q:\\react-incubator\\socialePageRedux\\src\\common\\formsControl\\validationFormSettings\\validation.ts":"5","Q:\\react-incubator\\socialePageRedux\\src\\Store\\Reducer with Include Selector\\FriendsPage\\FriendsPage.Reducer.ts":"6","Q:\\react-incubator\\socialePageRedux\\src\\WrapPage\\Friend\\FirendComponent.tsx":"7","Q:\\react-incubator\\socialePageRedux\\src\\Store\\Reducer with Include Selector\\ProfilePage\\Profile.Reducer.ts":"8","Q:\\react-incubator\\socialePageRedux\\src\\WrapPage\\Main\\MainInputStatus\\ProfileStatusComponent.tsx":"9","Q:\\react-incubator\\socialePageRedux\\src\\WrapPage\\Friend\\FriendsPageConteiner.tsx":"10","Q:\\react-incubator\\socialePageRedux\\src\\WrapPage\\Message\\Components\\Dialogue\\DialogueAppContainer.tsx":"11","Q:\\react-incubator\\socialePageRedux\\src\\WrapPage\\Main\\MainPostWall\\PostWallConteiner.tsx":"12","Q:\\react-incubator\\socialePageRedux\\src\\WrapPage\\Message\\Components\\Dialogue\\ChatComponent.tsx":"13","Q:\\react-incubator\\socialePageRedux\\src\\StaticPage\\Header\\login\\LogInAppComponent.tsx":"14","Q:\\react-incubator\\socialePageRedux\\src\\WrapPage\\Main\\MainInfoBlock\\ProfileComponent.tsx":"15","Q:\\react-incubator\\socialePageRedux\\src\\WrapPage\\Main\\MainPostWall\\PostComponent.tsx":"16","Q:\\react-incubator\\socialePageRedux\\src\\Store\\Store.ts":"17","Q:\\react-incubator\\socialePageRedux\\src\\common\\Paginator\\PaginatorComponent.tsx":"18","Q:\\react-incubator\\socialePageRedux\\src\\StaticPage\\Header\\HeaderAppComponent.tsx":"19","Q:\\react-incubator\\socialePageRedux\\src\\common\\preloader\\Preloader.tsx":"20","Q:\\react-incubator\\socialePageRedux\\src\\WrapPage\\Message\\Components\\SerchFriend\\SearchFriendsConteiner.tsx":"21","Q:\\react-incubator\\socialePageRedux\\src\\WrapPage\\Message\\Components\\SerchFriend\\SearchFriendsComponent.tsx":"22","Q:\\react-incubator\\socialePageRedux\\src\\WrapPage\\Message\\MessagePageAppComponent.tsx":"23","Q:\\react-incubator\\socialePageRedux\\src\\StaticPage\\Header\\authentication\\AuthenticationComponent.tsx":"24","Q:\\react-incubator\\socialePageRedux\\src\\Store\\Reducer with Include Selector\\DialoguePageRedirect\\DialoguePage.Reducer.ts":"25","Q:\\react-incubator\\socialePageRedux\\src\\Store\\Reducer with Include Selector\\App\\App.Reducer.ts":"26","Q:\\react-incubator\\socialePageRedux\\src\\Store\\Reducer with Include Selector\\MessagePage\\MessagePage.Reducer.ts":"27","Q:\\react-incubator\\socialePageRedux\\src\\Store\\Reducer with Include Selector\\AuthRedirectWithHaederPage\\Auth.Reducer.ts":"28","Q:\\react-incubator\\socialePageRedux\\src\\StaticPage\\Header\\login\\LogInFormContainer.tsx":"29","Q:\\react-incubator\\socialePageRedux\\src\\WrapPage\\Main\\MainAppComponent.tsx":"30","Q:\\react-incubator\\socialePageRedux\\src\\Store\\API\\API.ts":"31","Q:\\react-incubator\\socialePageRedux\\src\\common\\formsControl\\FormsControls.tsx":"32","Q:\\react-incubator\\socialePageRedux\\src\\WrapPage\\Main\\MainInfoBlock\\ProfileContainer.tsx":"33","Q:\\react-incubator\\socialePageRedux\\src\\WrapPage\\Main\\MainPostWall\\PostWallComponent.tsx":"34","Q:\\react-incubator\\socialePageRedux\\src\\WrapPage\\Message\\Components\\MessageItems\\MessageItemsConteiner.tsx":"35","Q:\\react-incubator\\socialePageRedux\\src\\WrapPage\\Message\\Components\\MessageItems\\MessageItemsComponent.tsx":"36","Q:\\react-incubator\\socialePageRedux\\src\\WrapPage\\Main\\MainInfoBlock\\ContactsComponent.tsx":"37","Q:\\react-incubator\\socialePageRedux\\src\\WrapPage\\Main\\MainInfoBlock\\ProfileDataComponent.tsx":"38","Q:\\react-incubator\\socialePageRedux\\src\\WrapPage\\Main\\MainInfoBlock\\CorrectedProfileDataComponents.tsx":"39","Q:\\react-incubator\\socialePageRedux\\src\\common\\withSuspense.tsx":"40"},{"size":2406,"mtime":1612966770141,"results":"41","hashOfConfig":"42"},{"size":550,"mtime":1612964978791,"results":"43","hashOfConfig":"42"},{"size":693,"mtime":1611133836000,"results":"44","hashOfConfig":"42"},{"size":2135,"mtime":1611133836000,"results":"45","hashOfConfig":"42"},{"size":620,"mtime":1611133836000,"results":"46","hashOfConfig":"42"},{"size":5089,"mtime":1611133836000,"results":"47","hashOfConfig":"42"},{"size":2076,"mtime":1611133836000,"results":"48","hashOfConfig":"42"},{"size":8218,"mtime":1612533205212,"results":"49","hashOfConfig":"42"},{"size":1623,"mtime":1611133836000,"results":"50","hashOfConfig":"42"},{"size":3320,"mtime":1611133836000,"results":"51","hashOfConfig":"42"},{"size":2059,"mtime":1611133836000,"results":"52","hashOfConfig":"42"},{"size":1190,"mtime":1611133836000,"results":"53","hashOfConfig":"42"},{"size":714,"mtime":1611133836000,"results":"54","hashOfConfig":"42"},{"size":2214,"mtime":1612963983722,"results":"55","hashOfConfig":"42"},{"size":2008,"mtime":1612534446986,"results":"56","hashOfConfig":"42"},{"size":1449,"mtime":1611133836000,"results":"57","hashOfConfig":"42"},{"size":1308,"mtime":1611133836000,"results":"58","hashOfConfig":"42"},{"size":1792,"mtime":1611133836000,"results":"59","hashOfConfig":"42"},{"size":260,"mtime":1611133836000,"results":"60","hashOfConfig":"42"},{"size":223,"mtime":1611133836000,"results":"61","hashOfConfig":"42"},{"size":918,"mtime":1611133836000,"results":"62","hashOfConfig":"42"},{"size":1677,"mtime":1611133836000,"results":"63","hashOfConfig":"42"},{"size":835,"mtime":1611133836000,"results":"64","hashOfConfig":"42"},{"size":823,"mtime":1611133836000,"results":"65","hashOfConfig":"42"},{"size":950,"mtime":1611133836000,"results":"66","hashOfConfig":"42"},{"size":1151,"mtime":1611133836000,"results":"67","hashOfConfig":"42"},{"size":4674,"mtime":1611133836000,"results":"68","hashOfConfig":"42"},{"size":3764,"mtime":1612963693660,"results":"69","hashOfConfig":"42"},{"size":549,"mtime":1612962173606,"results":"70","hashOfConfig":"42"},{"size":774,"mtime":1612459629245,"results":"71","hashOfConfig":"42"},{"size":2552,"mtime":1612963738606,"results":"72","hashOfConfig":"42"},{"size":1597,"mtime":1612512078363,"results":"73","hashOfConfig":"42"},{"size":2781,"mtime":1612963568098,"results":"74","hashOfConfig":"42"},{"size":2129,"mtime":1611133836000,"results":"75","hashOfConfig":"42"},{"size":889,"mtime":1611133836000,"results":"76","hashOfConfig":"42"},{"size":2745,"mtime":1611133836000,"results":"77","hashOfConfig":"42"},{"size":300,"mtime":1612509017262,"results":"78","hashOfConfig":"42"},{"size":1168,"mtime":1612510875939,"results":"79","hashOfConfig":"42"},{"size":1733,"mtime":1612512321549,"results":"80","hashOfConfig":"42"},{"size":291,"mtime":1612966887150,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1cbh7fb",{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"88"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"94"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"108"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"120"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"108"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"102"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"108"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"120"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"108"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"108"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"108"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"Q:\\react-incubator\\socialePageRedux\\src\\App.tsx",[],"Q:\\react-incubator\\socialePageRedux\\src\\index.tsx",[],"Q:\\react-incubator\\socialePageRedux\\src\\StaticPage\\Navigation\\Navigation.tsx",[],["179","180"],"Q:\\react-incubator\\socialePageRedux\\src\\WrapPage\\Friend\\FriendsPageComponent.tsx",[],["181","182"],"Q:\\react-incubator\\socialePageRedux\\src\\common\\formsControl\\validationFormSettings\\validation.ts",[],["183","184"],"Q:\\react-incubator\\socialePageRedux\\src\\Store\\Reducer with Include Selector\\FriendsPage\\FriendsPage.Reducer.ts",["185"],"import {FriendsAPI, itemsBackPropsToFriends} from \"../../API/API\";\nimport {Dispatch} from \"redux\";\nimport {setAuthUserDate} from \"../AuthRedirectWithHaederPage/Auth.Reducer\";\n\nexport interface friendsType {\n    name: string,\n    id: string,\n    uniqueUrlName: string | null,\n    photos: {\n        small: string | null,\n        large: string\n    },\n    status: string,\n    followed: boolean\n\n}\n\n\nexport interface stateType {\n    friends: Array<friendsType>\n    pageSize: number,\n    totalFriendCount: number,\n    currentPage: number,\n    isFetching: boolean,\n    followingInProgress: Array<number>\n\n}\n\nconst initialState: stateType = {\n    friends: [],\n    pageSize: 5,\n    totalFriendCount: 19,\n    currentPage: 1,\n    isFetching: false,\n    followingInProgress: [] as Array<number>\n}\n\n\n// enum string configuration: namePages/{name of component}/actionType\nexport enum ActionType {\n    ON_UNFOLLOW_AC = \"friendsPage/{FriendsComponent}/ON-UNFOLLOW-AC\",\n    ON_FOLLOW_AC = 'friendsPage/{FriendsComponent}/FOLLOW-AC',\n    SET_FRIEND_AC = 'friendsPage/{FriendsComponent}/SET-FRIEND-AC',\n    SET_CURRENT_PAGE = 'friendsPage/{FriendsComponent}/SET-CURRENT-PAGE',\n    TOGGLE_IS_FETCHING = 'friendsPage/{GlobalConfiguration}/TOGGLIE_IS_FETCHING',\n    TOGGlE_IN_FOLLOWING_PROGRESS = 'friendsPage/{FriendsComponent}/TOGGlE_IN_FOLLOWING_PROGRESS'\n\n}\n\ninterface Action<T> {\n    type: ActionType,\n    payload: T\n}\n\n\nexport const unFollow = (id: number): Action<number> => ({\n    type: ActionType.ON_UNFOLLOW_AC,\n    payload: id\n});\n\n\nexport const follow = (id: number): Action<number> => ({\n    type: ActionType.ON_FOLLOW_AC,\n    payload: id\n});\n\n\nexport const setFriend = (newFriends: Array<itemsBackPropsToFriends>): Action<Array<itemsBackPropsToFriends>> => ({\n    type: ActionType.SET_FRIEND_AC,\n    payload: newFriends\n});\n\n\nexport const setCurrentPage = (currentPage: number): Action<number> => ({\n    type: ActionType.SET_CURRENT_PAGE,\n    payload: currentPage\n});\n\n\nexport const toggleIsFetching = (isFetching: boolean): Action<boolean> => ({\n    type: ActionType.TOGGLE_IS_FETCHING,\n    payload: isFetching\n});\n\n\nexport const toggleFollowingProgress = (isFetching: boolean, friendsId: number): Action<{ isFetching: boolean; friendsId: number }> => ({\n    type: ActionType.TOGGlE_IN_FOLLOWING_PROGRESS,\n    payload: {isFetching, friendsId}\n});\n\n\n//thunk\nexport const getFriendsThunk = (page: number, pageSize: number) => {\n    return (dispatch: Dispatch) => {\n        dispatch(toggleIsFetching(true))\n        dispatch(setCurrentPage(page))\n        FriendsAPI.getUsers(pageSize, page)\n            .then((data) => {\n                dispatch(toggleIsFetching(false))\n                dispatch(setFriend(data))\n            })\n    }\n};\n\n//method for Follow & unfollow thunk\nconst followUnfollowFlow = async (dispatch: Dispatch, id: number, apiMethod: any, action: any) => {\n    dispatch(toggleFollowingProgress(true, id))\n    dispatch(toggleIsFetching(true))\n    let response = await apiMethod(id);\n    if (response.data.resultCode === 0) {\n        dispatch(action(id));\n    }\n    dispatch(toggleFollowingProgress(false, id))\n    dispatch(toggleIsFetching(false))\n}\n\n\nexport const followThunk = (id: number) => {\n    return  async (dispatch: Dispatch) => {\n         await followUnfollowFlow(dispatch, id,  FriendsAPI.unFollow.bind(id), unFollow)\n\n    }\n}\n\nexport const unfollowThunk = (id: number) => {\n    return async (dispatch: Dispatch) => {\n        await followUnfollowFlow(dispatch, id, FriendsAPI.follow.bind(id), follow)\n    }\n}\n\n\nconst friendsReducer = (state = initialState, action: Action<any>): stateType => {\n    switch (action.type) {\n\n        case ActionType.ON_UNFOLLOW_AC:\n            return {\n                ...state,\n                friends: state.friends.map(fr => {\n\n                    if (fr.id === action.payload) {\n                        return {...fr, followed: false}\n                    }\n                    return fr\n                })\n            }\n\n        case ActionType.ON_FOLLOW_AC:\n            return {\n                ...state,\n                friends: state.friends.map(fr => {\n\n                    if (fr.id === action.payload) {\n                        return {...fr, followed: true}\n                    }\n                    return fr\n                })\n            }\n\n\n        case ActionType.SET_FRIEND_AC: {\n            return {...state, friends: action.payload}\n        }\n        case ActionType.SET_CURRENT_PAGE: {\n            return {...state, currentPage: action.payload}\n        }\n\n        case ActionType.TOGGLE_IS_FETCHING: {\n            return {...state, isFetching: action.payload}\n        }\n        case ActionType.TOGGlE_IN_FOLLOWING_PROGRESS: {\n            return {\n                ...state,\n                followingInProgress: action.payload.isFetching ?\n                    [...state.followingInProgress, action.payload.friendsId]\n                    :\n                    state.followingInProgress.filter((id: number) => id !== action.payload.friendsId)\n\n            }\n        }\n    }\n    return state\n}\n\n\nexport default friendsReducer;","Q:\\react-incubator\\socialePageRedux\\src\\WrapPage\\Friend\\FirendComponent.tsx",[],"Q:\\react-incubator\\socialePageRedux\\src\\Store\\Reducer with Include Selector\\ProfilePage\\Profile.Reducer.ts",[],["186","187"],"Q:\\react-incubator\\socialePageRedux\\src\\WrapPage\\Main\\MainInputStatus\\ProfileStatusComponent.tsx",["188","189"],"import React, {ChangeEvent, PureComponent} from 'react';\n\n\ninterface Props {\n    status: string,\n    updateStatus: (status: string)=> void\n}\n\n\n\n\n\nclass ProfileStatusComponent extends PureComponent<Props> {\n\n    shouldComponentUpdate(nextProps: Readonly<Props>, nextState: Readonly<{}>): boolean {\n            return  nextProps != this.props || nextState != this.state\n    }\n\n    componentDidUpdate(prevProps: Readonly<Props>, prevState: Readonly<{}>) {\n        if (prevProps.status !== this.props.status){\n            this.setState({\n                status: this.props.status\n            })\n        }\n\n    }\n\n    state = {\n        editMode: false,\n        status: this.props.status\n\n    }\n\n    activatedEditMode =() =>{\n        this.setState({\n            editMode: true\n        })\n    }\n    deActivatedEditMode =() => {\n        this.setState({\n            editMode: false\n        })\n\n        this.props.updateStatus(this.state.status)\n    }\n\n    onStatusChange = (event: ChangeEvent<HTMLInputElement>) => {\n        this.setState({\n            status: event.currentTarget.value\n        })\n    }\n\n    render() {\n        return (<div>\n\n            {!this.state.editMode ?\n                <div>\n                    <span onClick={this.activatedEditMode}>{this.state.status || 'No Status'}</span>\n                </div>\n                :\n                <div>\n                    <input onChange = {this.onStatusChange}\n                        autoFocus={true} onBlur={this.deActivatedEditMode} value={this.state.status}/>\n                </div>\n            }\n\n\n        </div>)\n    }\n}\n\nexport default ProfileStatusComponent;\n\n","Q:\\react-incubator\\socialePageRedux\\src\\WrapPage\\Friend\\FriendsPageConteiner.tsx",[],["190","191"],"Q:\\react-incubator\\socialePageRedux\\src\\WrapPage\\Message\\Components\\Dialogue\\DialogueAppContainer.tsx",[],"Q:\\react-incubator\\socialePageRedux\\src\\WrapPage\\Main\\MainPostWall\\PostWallConteiner.tsx",["192"],"Q:\\react-incubator\\socialePageRedux\\src\\WrapPage\\Message\\Components\\Dialogue\\ChatComponent.tsx",[],"Q:\\react-incubator\\socialePageRedux\\src\\StaticPage\\Header\\login\\LogInAppComponent.tsx",["193","194"],"import React, {ComponentType} from \"react\";\nimport {Redirect} from \"react-router-dom\";\nimport {InjectedFormProps, reduxForm} from \"redux-form\";\nimport {createField, Input} from \"../../../common/formsControl/FormsControls\";\nimport {required} from \"../../../common/formsControl/validationFormSettings/validation\";\nimport style from './../../../common/formsControl/fromControlStyle.module.css';\n\n\nexport type formDataType = {\n    email: string\n    password: string\n    rememberMe: boolean\n    captcha: string\n\n\n}\nexport type IPropsType = {\n    auth: boolean,\n    getAuthUserDate: (formData: formDataType) => void,\n    logInThunk: (email: string, password: string, rememberMe: boolean, captcha: string | null) => void,\n    logOutThunk: () => void,\n    captchaUrl? : string | null\n\n\n}\n\nexport const Login: React.FC<IPropsType> = (\n    {\n        getAuthUserDate,   ...props\n    }\n) => {\n    const onSubmit = (formData: formDataType) => {\n        props.logInThunk(formData.email, formData.password, formData.rememberMe, formData.captcha)\n    }\n    if (props.auth) return <Redirect to={'/profile'}/>\n    return (\n        <div>\n            <h1>Login</h1>\n            <LoginReduxForm onSubmit={onSubmit} captchaUrl = {props.captchaUrl} {...props} />\n        </div>\n    )\n}\n\n\nexport const LoginForm: React.FC<InjectedFormProps<formDataType>  & IPropsType> = (\n    {\n        handleSubmit, error, captchaUrl\n    }\n) => {\n    return (\n\n\n        <form onSubmit={handleSubmit}>\n\n            {createField\n            (\"email\", 'email', [required], Input,)}\n            {createField(\"Password\", 'password', [required], Input, {type: 'password'})}\n            {createField(undefined, 'rememberMe', [], Input, {type: 'checkbox'}, 'rememberMe')}\n\n            {captchaUrl && <img src={captchaUrl}/>}\n            {captchaUrl && createField('Symbols from image', 'captcha', [required], Input, {})}\n\n\n            {error ?\n                <div className={style.formSummaryControl}>\n                    {error}\n                </div> : ''\n            }\n            <div>\n                <button>Login</button>\n            </div>\n        </form>\n    )\n}\n\n//@ts-ignore\nconst LoginReduxForm = reduxForm<formDataType>({form: \"login\"})(LoginForm)","Q:\\react-incubator\\socialePageRedux\\src\\WrapPage\\Main\\MainInfoBlock\\ProfileComponent.tsx",[],["195","196"],"Q:\\react-incubator\\socialePageRedux\\src\\WrapPage\\Main\\MainPostWall\\PostComponent.tsx",[],"Q:\\react-incubator\\socialePageRedux\\src\\Store\\Store.ts",[],"Q:\\react-incubator\\socialePageRedux\\src\\common\\Paginator\\PaginatorComponent.tsx",[],"Q:\\react-incubator\\socialePageRedux\\src\\StaticPage\\Header\\HeaderAppComponent.tsx",[],"Q:\\react-incubator\\socialePageRedux\\src\\common\\preloader\\Preloader.tsx",[],"Q:\\react-incubator\\socialePageRedux\\src\\WrapPage\\Message\\Components\\SerchFriend\\SearchFriendsConteiner.tsx",["197"],"import React from 'react'\nimport {connect} from \"react-redux\";\nimport SearchFriendsComponent from \"./SearchFriendsComponent\";\nimport {\n\n    onSearchFriendsAC,\n    searchFriendType,\n    setSearchFriendsAC\n} from \"../../../../Store/Reducer with Include Selector/MessagePage/MessagePage.Reducer\";\nimport {Dispatch} from \"redux\";\n\nconst mapStateToProps = (state: {messagePage: {searchFriends: Array<searchFriendType> }, searchInput: string}) => {\n    return{\n\n        searchFriends: state.messagePage.searchFriends\n    }\n}\n\n\nconst mapDispatchToProps = (dispatch : Dispatch) => {\n    return{\n        setSearch: (searchFriends: Array<searchFriendType>) => {\n            dispatch(setSearchFriendsAC(searchFriends))\n        },\n        onFilterFriends: (name: string) => {\n            dispatch(onSearchFriendsAC(name))\n        },\n\n\n    }\n}\n\n\nexport default connect (mapStateToProps, mapDispatchToProps) (SearchFriendsComponent)","Q:\\react-incubator\\socialePageRedux\\src\\WrapPage\\Message\\Components\\SerchFriend\\SearchFriendsComponent.tsx",["198"],"import React, {ChangeEvent, useCallback, useState} from 'react'\nimport {searchFriendType} from \"../../../../Store/Reducer with Include Selector/MessagePage/MessagePage.Reducer\";\nimport {TextField} from \"@material-ui/core\";\n\n\ninterface props {\n\n    onFilterFriends: (name: string) => void,\n    searchFriends : Array<searchFriendType>,\n    setSearch: (searchFriends : Array<searchFriendType>)=> void\n}\n\nconst SearchFriendsComponent: React.FunctionComponent <props> = ({onFilterFriends,searchFriends,setSearch}) => {\n\n    const [isCollapsedFriend, setIsCollapsedFriend] = useState<boolean>(false)\n\n\n\n    const ShowCollapsedFriend = useCallback(()=> setIsCollapsedFriend(!isCollapsedFriend),[isCollapsedFriend] )\n    const onSearchChangeFilterKeyPress = useCallback((event: ChangeEvent <HTMLInputElement | HTMLTextAreaElement>) =>{\n\n       onFilterFriends(event.currentTarget.value)\n    },[])\n\n    return(<div>\n        <div>\n            <div>\n                <TextField onClick={ShowCollapsedFriend}\n                            onBlur={()=>setIsCollapsedFriend(false)}\n                           onChange = {(event)=> onSearchChangeFilterKeyPress(event)}\n                            id=\"standard-secondary\" label=\"Faster search Friends\" color=\"primary\" />\n            </div>\n\n\n        </div>\n\n        {\n            isCollapsedFriend && searchFriends.map( items => {\n                return (\n                    <div key = {items.id}>\n                        <img src={items.img} alt=\"There was y Friend\"/>\n                        <p>{items.name}</p> <p>{items.secondName}</p>\n                    </div>)\n            })\n        }\n    </div>)\n}\n\nexport default SearchFriendsComponent","Q:\\react-incubator\\socialePageRedux\\src\\WrapPage\\Message\\MessagePageAppComponent.tsx",[],"Q:\\react-incubator\\socialePageRedux\\src\\StaticPage\\Header\\authentication\\AuthenticationComponent.tsx",["199"],"import React, {useEffect} from 'react'\nimport {NavLink} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"../../../Store/Store\";\nimport {getAuthUserDate, logOutThunk, stateProps as authProps} from \"../../../Store/Reducer with Include Selector/AuthRedirectWithHaederPage/Auth.Reducer\";\n\n\nconst AuthenticationComponent: React.FC  = () => {\n\n    const auth = useSelector<AppRootStateType,authProps>(state => state.authentication);\n    const dispatch = useDispatch();\n\n    useEffect(()=> {\n        dispatch (getAuthUserDate())\n\n    },[])\n\n\n\n    return <div>\n\n        {    auth.isAuth? <button onClick={()=> dispatch(logOutThunk())}><h4>{auth.data.login}</h4> </button> : <NavLink to={'/login'}>LogIn</NavLink> }\n\n    </div>\n}\n\nexport default AuthenticationComponent;","Q:\\react-incubator\\socialePageRedux\\src\\Store\\Reducer with Include Selector\\DialoguePageRedirect\\DialoguePage.Reducer.ts",[],"Q:\\react-incubator\\socialePageRedux\\src\\Store\\Reducer with Include Selector\\App\\App.Reducer.ts",[],"Q:\\react-incubator\\socialePageRedux\\src\\Store\\Reducer with Include Selector\\MessagePage\\MessagePage.Reducer.ts",[],"Q:\\react-incubator\\socialePageRedux\\src\\Store\\Reducer with Include Selector\\AuthRedirectWithHaederPage\\Auth.Reducer.ts",["200"],"Q:\\react-incubator\\socialePageRedux\\src\\StaticPage\\Header\\login\\LogInFormContainer.tsx",["201"],"Q:\\react-incubator\\socialePageRedux\\src\\WrapPage\\Main\\MainAppComponent.tsx",[],"Q:\\react-incubator\\socialePageRedux\\src\\Store\\API\\API.ts",["202"],"Q:\\react-incubator\\socialePageRedux\\src\\common\\formsControl\\FormsControls.tsx",[],"Q:\\react-incubator\\socialePageRedux\\src\\WrapPage\\Main\\MainInfoBlock\\ProfileContainer.tsx",["203","204"],"import {\n    getStatus,\n    getUserProfile, profileType, savePhoto, saveProfile,\n    updateStatus,\n} from \"../../../Store/Reducer with Include Selector/ProfilePage/Profile.Reducer\";\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\n\nimport {connect} from \"react-redux\";\n\nimport React, {ComponentType} from \"react\";\nimport Preloader from \"../../../common/preloader/Preloader\";\nimport ProfileComponent from \"./ProfileComponent\";\nimport {AppRootStateType} from \"../../../Store/Store\";\nimport {compose} from \"redux\";\n\n\ntype PathParamsType = { userId: string }\ntype MapPropsType = ReturnType<typeof mapStateToProps>\ntype DispatchPropsType = {\n    getUserProfile: (userId: number | null) => void\n    getStatus: (userId: number | null) => void\n    updateStatus: (status: string) => void\n    savePhoto: (file: File) => void\n    saveProfile: (profile: profileType) => Promise<any>\n\n}\n\ntype PropsType = MapPropsType & DispatchPropsType & RouteComponentProps<PathParamsType>\n\n\nclass ProfileConteiner extends React.Component<PropsType> {\n    constructor(props: PropsType) {\n        super(props);\n    }\n\n\n    refreshProfile() {\n        let userId: number | null = +this.props.match.params.userId\n        if (!userId) {\n            userId = this.props.authId\n            if (!userId) {\n                this.props.history.push('/login')\n            }\n        }\n\n        this.props.getUserProfile(userId)\n        this.props.getStatus(userId)\n    }\n\n    componentDidMount() {\n        this.refreshProfile()\n    }\n\n    componentDidUpdate(prevProps: Readonly<PropsType>, prevState: Readonly<PropsType>) {\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\n            this.refreshProfile()\n        }\n    }\n\n    componentWillUnmount(): void {\n\n    }\n\n    render() {\n        if (!this.props.profile) {\n            return <Preloader/>\n        }\n        return <ProfileComponent {...this.props}\n                                 profile={this.props.profile}\n                                 isOwner={Boolean(!this.props.match.params.userId)}\n                                 status={this.props.status}\n                                 updateStatus={this.props.updateStatus}\n                                 savePhoto={this.props.savePhoto}\n                                 saveProfile = {this.props.saveProfile}\n\n\n        />\n\n    }\n}\n\n\nconst mapStateToProps = (state: AppRootStateType) => {\n    return {\n        profile: state.profilePage.profile,\n        status: state.profilePage.status,\n        authId: state.authentication.data.id,\n        isAuth: state.authentication.isAuth,\n\n\n    }\n}\n\nexport default compose<ComponentType>(\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\n    withRouter\n)(ProfileConteiner)","Q:\\react-incubator\\socialePageRedux\\src\\WrapPage\\Main\\MainPostWall\\PostWallComponent.tsx",["205","206","207","208","209"],"import React, {ChangeEvent, useCallback, useState} from \"react\"\nimport {ItemPostType} from \"../../../Store/Reducer with Include Selector/ProfilePage/Profile.Reducer\";\nimport {TextField} from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport PostComponent from \"./PostComponent\";\n\ninterface Props {\n    itemsPost: Array<ItemPostType>,\n    messageForNewPost: string,\n    onAddNewPostHandler: (content: string) => void,\n    onChangeTextPost: (content: string) => void,\n    onRemovePostCreater: (id: string) => void,\n    setItemPostAC: (newPosts: ItemPostType) => void\n}\n\n\nconst PostWallComponent: React.FC<Props> = React.memo((props) => {\n\n    const [error, setError] = useState<string | null>(null)\n\n    const onChangeTextFieldHandler = useCallback((event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n        props.onChangeTextPost(event.currentTarget.value)\n    }, [props.onChangeTextPost])\n\n    const onAddNewPost = (content: string) => {\n        if (props.messageForNewPost.trim() !== '') {\n            props.onAddNewPostHandler(content)\n        }\n\n\n    }\n\n    const onRemovePostHandler = useCallback((id: string) => {\n        props.onRemovePostCreater(id)\n    }, [])\n\n    const date = new Date()\n    let hourse = date.getHours();\n    let minutes = date.getMinutes();\n\n\n    return (<div>\n\n        <div>\n\n            <TextField value={props.messageForNewPost} onChange={onChangeTextFieldHandler} id=\"standard-basic\"\n                       label=\"Standard\"/>\n            <Button onClick={() => onAddNewPost(props.messageForNewPost)} variant=\"outlined\" color=\"primary\"\n                    size='small'>Send</Button>\n            {error && <div>{error}</div>}\n        </div>\n        <div>\n            {\n                props.itemsPost.map(p => {\n                    return (<div>\n                        <PostComponent key={p.id}\n                                       itemsPost={p}\n                                       onRemovePostHandler={onRemovePostHandler}/>\n                    </div>)\n\n                })\n            }\n        </div>\n\n\n    </div>)\n})\n\nexport default PostWallComponent;","Q:\\react-incubator\\socialePageRedux\\src\\WrapPage\\Message\\Components\\MessageItems\\MessageItemsConteiner.tsx",["210"],"import React from 'react'\nimport {connect} from \"react-redux\";\nimport MessageItemsComponent from \"./MessageItemsComponent\";\nimport {messageItemType, onRemoveDialogueItemsAC, setMessageItemsAC} from \"../../../../Store/Reducer with Include Selector/MessagePage/MessagePage.Reducer\";\nimport {Dispatch} from \"redux\";\n\n\n\n\nconst mapStateToProps = (state: {messagePage: {messageItems: Array<messageItemType>}}, ) => {\n    return{\n        messageItems: state.messagePage.messageItems,\n    }\n}\n\nconst mapDispatchToProps = (dispatch : Dispatch) => {\n    return{\n        onRemoveDialogueItemsAC: (id: string) => {\n            dispatch(onRemoveDialogueItemsAC(id))\n        },\n\n\n        setMessage: (messageItems: Array<messageItemType>) => {\n            dispatch(setMessageItemsAC(messageItems))\n        }\n    }\n}\n\n\n\nexport default connect (mapStateToProps, mapDispatchToProps) (MessageItemsComponent)","Q:\\react-incubator\\socialePageRedux\\src\\WrapPage\\Message\\Components\\MessageItems\\MessageItemsComponent.tsx",["211","212"],"import React, {useState} from 'react'\nimport {ChangeFilterType, messageItemType} from \"../../../../Store/Reducer with Include Selector/MessagePage/MessagePage.Reducer\";\nimport {NavLink} from \"react-router-dom\";\nimport {IconButton} from \"@material-ui/core\";\nimport {Delete} from \"@material-ui/icons\";\n\n\n\n\ninterface props {\n    messageItems: Array<messageItemType>,\n    onRemoveDialogueItemsAC: (id: string) => void,\n    setMessage: (messageItems: Array<messageItemType>) => void\n\n}\n\nconst MessageItemsComponent: React.FunctionComponent<props> = React.memo((props) => {\n    console.log('changed')\n// ChangeFiler --\n    const [messages, setMessages] = useState<messageItemType[]>(props.messageItems);\n    const [filter, setFilter]= useState<ChangeFilterType>('All');\n\n\n\n\n        let filteredMessage = props.messageItems\n\n    if (filter === 'Unread') {\n        filteredMessage = filteredMessage.filter(m=> m.importantly === 'Unread');\n    }\n\n    if (filter === 'Important'){\n        filteredMessage = filteredMessage.filter(m => m.importantly === 'Important')\n    }\n\n\n\n\n// -- ChangeFilter\n\n    return <div>\n        <div>\n            <button onClick={()=> setFilter('All')} >All</button>\n            <button onClick={()=> setFilter('Unread')} >Unread</button>\n            <button onClick={()=> setFilter( 'Important')}>Important</button>\n        </div>\n\n        <div>\n           {  filteredMessage.map((item) =>\n               <div key={item.id}>\n                       <div>\n                           <div>\n                               <img src={item.imgUrl} alt=\"avatar friend\"/>\n                           </div>\n                           <div>\n                               {item.profile_online ? 'online' : ''}\n                           </div>\n                       </div>\n\n                       <div>\n                           <div>\n                               <div>\n                                   {item.name}{item.secondName}\n                               </div>\n                               <div>\n                                   {new Date().toLocaleTimeString()}\n                                   <IconButton onClick={() => props.onRemoveDialogueItemsAC(item.id)}\n                                               aria-label=\"delete\" color=\"primary\">\n                                       <Delete/>\n                                   </IconButton>\n                               </div>\n                           </div>\n                           <div>\n                               <NavLink exact to={`/dialogue/${item.id}`}><p>{item.message}</p></NavLink>\n                           </div>\n                       </div>\n\n\n                   </div>) }\n\n       </div>\n\n    </div>\n})\n\nexport default MessageItemsComponent","Q:\\react-incubator\\socialePageRedux\\src\\WrapPage\\Main\\MainInfoBlock\\ContactsComponent.tsx",[],"Q:\\react-incubator\\socialePageRedux\\src\\WrapPage\\Main\\MainInfoBlock\\ProfileDataComponent.tsx",[],"Q:\\react-incubator\\socialePageRedux\\src\\WrapPage\\Main\\MainInfoBlock\\CorrectedProfileDataComponents.tsx",["213"],"import {profileType} from \"../../../Store/Reducer with Include Selector/ProfilePage/Profile.Reducer\";\r\nimport {createField, GetStringKeys, Input, TextArea} from \"../../../common/formsControl/FormsControls\";\r\nimport {InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {FC} from \"react\";\r\n\r\n\r\ntype PropsType = {\r\n    profile: profileType\r\n}\r\ntype ProfileTypeKeys = GetStringKeys<profileType>\r\n\r\nconst ProfileDataForm: FC<InjectedFormProps<profileType, PropsType> & PropsType> = ({handleSubmit, profile, error}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <div><button>save</button></div>\r\n        {error && <div>\r\n            {error}\r\n        </div>\r\n        }\r\n        <div>\r\n            <b>Full name</b>: {createField(\"Full name\", \"fullName\", [], Input)}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>: {createField(\"\", \"lookingForAJob\", [], Input, {type: \"checkbox\"} )}\r\n        </div>\r\n\r\n        <div>\r\n            <b>My professional skills</b>:\r\n            { createField(\"My professional skills\", \"lookingForAJobDescription\", [], TextArea  )}\r\n        </div>\r\n\r\n\r\n        <div>\r\n            <b>About me</b>:\r\n            { createField(\"About me\", \"aboutMe\", [], TextArea  )}\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n            return <div key={key}>\r\n                {/* todo: create some solution for embedded objects */}\r\n                <b>{key}: {createField(key, \"contacts.\" + key, [], Input)}</b>\r\n            </div>\r\n        })}\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm<profileType, PropsType>({form: 'edit-profile'})(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm;","Q:\\react-incubator\\socialePageRedux\\src\\common\\withSuspense.tsx",[],{"ruleId":"214","replacedBy":"215"},{"ruleId":"216","replacedBy":"217"},{"ruleId":"214","replacedBy":"218"},{"ruleId":"216","replacedBy":"219"},{"ruleId":"214","replacedBy":"220"},{"ruleId":"216","replacedBy":"221"},{"ruleId":"222","severity":1,"message":"223","line":3,"column":9,"nodeType":"224","messageId":"225","endLine":3,"endColumn":24},{"ruleId":"214","replacedBy":"226"},{"ruleId":"216","replacedBy":"227"},{"ruleId":"228","severity":1,"message":"229","line":16,"column":31,"nodeType":"230","messageId":"231","endLine":16,"endColumn":33},{"ruleId":"228","severity":1,"message":"229","line":16,"column":58,"nodeType":"230","messageId":"231","endLine":16,"endColumn":60},{"ruleId":"214","replacedBy":"232"},{"ruleId":"216","replacedBy":"233"},{"ruleId":"222","severity":1,"message":"234","line":1,"column":8,"nodeType":"224","messageId":"225","endLine":1,"endColumn":13},{"ruleId":"222","severity":1,"message":"235","line":1,"column":16,"nodeType":"224","messageId":"225","endLine":1,"endColumn":29},{"ruleId":"236","severity":1,"message":"237","line":60,"column":28,"nodeType":"238","endLine":60,"endColumn":51},{"ruleId":"214","replacedBy":"239"},{"ruleId":"216","replacedBy":"240"},{"ruleId":"222","severity":1,"message":"234","line":1,"column":8,"nodeType":"224","messageId":"225","endLine":1,"endColumn":13},{"ruleId":"241","severity":1,"message":"242","line":23,"column":7,"nodeType":"243","endLine":23,"endColumn":9,"suggestions":"244"},{"ruleId":"241","severity":1,"message":"245","line":16,"column":7,"nodeType":"243","endLine":16,"endColumn":9,"suggestions":"246"},{"ruleId":"222","severity":1,"message":"247","line":129,"column":6,"nodeType":"224","messageId":"225","endLine":129,"endColumn":19},{"ruleId":"222","severity":1,"message":"234","line":1,"column":8,"nodeType":"224","messageId":"225","endLine":1,"endColumn":13},{"ruleId":"222","severity":1,"message":"248","line":2,"column":9,"nodeType":"224","messageId":"225","endLine":2,"endColumn":19},{"ruleId":"249","severity":1,"message":"250","line":32,"column":5,"nodeType":"251","messageId":"252","endLine":34,"endColumn":6},{"ruleId":"228","severity":1,"message":"229","line":55,"column":44,"nodeType":"230","messageId":"231","endLine":55,"endColumn":46},{"ruleId":"222","severity":1,"message":"253","line":19,"column":19,"nodeType":"224","messageId":"225","endLine":19,"endColumn":27},{"ruleId":"241","severity":1,"message":"254","line":23,"column":8,"nodeType":"243","endLine":23,"endColumn":32,"suggestions":"255"},{"ruleId":"241","severity":1,"message":"254","line":35,"column":8,"nodeType":"243","endLine":35,"endColumn":10,"suggestions":"256"},{"ruleId":"222","severity":1,"message":"257","line":38,"column":9,"nodeType":"224","messageId":"225","endLine":38,"endColumn":15},{"ruleId":"222","severity":1,"message":"258","line":39,"column":9,"nodeType":"224","messageId":"225","endLine":39,"endColumn":16},{"ruleId":"222","severity":1,"message":"234","line":1,"column":8,"nodeType":"224","messageId":"225","endLine":1,"endColumn":13},{"ruleId":"222","severity":1,"message":"259","line":20,"column":12,"nodeType":"224","messageId":"225","endLine":20,"endColumn":20},{"ruleId":"222","severity":1,"message":"260","line":20,"column":22,"nodeType":"224","messageId":"225","endLine":20,"endColumn":33},{"ruleId":"222","severity":1,"message":"261","line":10,"column":6,"nodeType":"224","messageId":"225","endLine":10,"endColumn":21},"no-native-reassign",["262"],"no-negated-in-lhs",["263"],["262"],["263"],["262"],["263"],"@typescript-eslint/no-unused-vars","'setAuthUserDate' is defined but never used.","Identifier","unusedVar",["262"],["263"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["262"],["263"],"'React' is defined but never used.","'ComponentType' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["262"],["263"],"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'onFilterFriends'. Either include it or remove the dependency array. If 'onFilterFriends' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["264"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["265"],"'TypesOfAction' is defined but never used.","'photosType' is defined but never used.","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'setError' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["266"],["267"],"'hourse' is assigned a value but never used.","'minutes' is assigned a value but never used.","'messages' is assigned a value but never used.","'setMessages' is assigned a value but never used.","'ProfileTypeKeys' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"268","fix":"269"},{"desc":"270","fix":"271"},{"desc":"272","fix":"273"},{"desc":"272","fix":"274"},"Update the dependencies array to be: [onFilterFriends]",{"range":"275","text":"276"},"Update the dependencies array to be: [dispatch]",{"range":"277","text":"278"},"Update the dependencies array to be: [props]",{"range":"279","text":"280"},{"range":"281","text":"280"},[885,887],"[onFilterFriends]",[591,593],"[dispatch]",[903,927],"[props]",[1204,1206]]