[{"Q:\\react-incubator\\socialePageRedux\\src\\index.tsx":"1","Q:\\react-incubator\\socialePageRedux\\src\\App.tsx":"2","Q:\\react-incubator\\socialePageRedux\\src\\reportWebVitals.ts":"3","Q:\\react-incubator\\socialePageRedux\\src\\WrapPage\\Main\\MainConteiner.tsx":"4","Q:\\react-incubator\\socialePageRedux\\src\\WrapPage\\Main\\MainPostWall\\PostWallComponent.tsx":"5","Q:\\react-incubator\\socialePageRedux\\src\\WrapPage\\Main\\MainPostWall\\PostWallConteiner.tsx":"6","Q:\\react-incubator\\socialePageRedux\\src\\Store\\postWall.reducer.ts":"7","Q:\\react-incubator\\socialePageRedux\\src\\Store\\Store.ts":"8","Q:\\react-incubator\\socialePageRedux\\src\\WrapPage\\Friend\\FriendComponent.tsx":"9","Q:\\react-incubator\\socialePageRedux\\src\\WrapPage\\Friend\\FriendConteiner.tsx":"10","Q:\\react-incubator\\socialePageRedux\\src\\StaticPage\\Navigation\\NavigationConteiner.tsx":"11","Q:\\react-incubator\\socialePageRedux\\src\\Store\\FriendsPage.Reducer.ts":"12"},{"size":637,"mtime":1607154412216,"results":"13","hashOfConfig":"14"},{"size":671,"mtime":1607157141972,"results":"15","hashOfConfig":"14"},{"size":425,"mtime":1606579925625,"results":"16","hashOfConfig":"14"},{"size":281,"mtime":1606678542399,"results":"17","hashOfConfig":"14"},{"size":3132,"mtime":1607006074876,"results":"18","hashOfConfig":"14"},{"size":1183,"mtime":1606998842126,"results":"19","hashOfConfig":"14"},{"size":3338,"mtime":1607002378288,"results":"20","hashOfConfig":"14"},{"size":335,"mtime":1606737170772,"results":"21","hashOfConfig":"14"},{"size":1861,"mtime":1607157051814,"results":"22","hashOfConfig":"14"},{"size":865,"mtime":1607156431353,"results":"23","hashOfConfig":"14"},{"size":739,"mtime":1607155216623,"results":"24","hashOfConfig":"14"},{"size":3781,"mtime":1606748036211,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1cbh7fb",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"Q:\\react-incubator\\socialePageRedux\\src\\index.tsx",[],["57","58"],"Q:\\react-incubator\\socialePageRedux\\src\\App.tsx",[],"Q:\\react-incubator\\socialePageRedux\\src\\reportWebVitals.ts",[],["59","60"],"Q:\\react-incubator\\socialePageRedux\\src\\WrapPage\\Main\\MainConteiner.tsx",[],"Q:\\react-incubator\\socialePageRedux\\src\\WrapPage\\Main\\MainPostWall\\PostWallComponent.tsx",["61"],"import React, {ChangeEvent, useState} from \"react\"\r\nimport {ItemPostType} from \"../../../Store/postWall.reducer\";\r\nimport {TextField} from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport {Delete} from \"@material-ui/icons\";\r\n\r\ninterface Props {\r\n    itemsPost: Array <ItemPostType>,\r\n    messageForNewPost: string,\r\n    onAddNewPostHandler: (content: string) => void,\r\n    onChangeTextPost: (content:string) => void,\r\n    onRemovePostCreater:(id:string) => void,\r\n    setItemPostAC: (newPosts: ItemPostType) => void\r\n}\r\n\r\n\r\nconst PostWallComponent = (props: Props) => {\r\n\r\n    const [error, setError] = useState<string|null>(null)\r\n\r\n    const onChangeTextFieldHandler = (event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n        props.onChangeTextPost(event.currentTarget.value)\r\n    }\r\n\r\n    const onAddNewPost = (content: string) => {\r\n        if (props.messageForNewPost.trim() !==''){\r\n            props.onAddNewPostHandler(content)\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const onRemovePostHandler = (id: string) => {\r\n        props.onRemovePostCreater(id)\r\n    }\r\n\r\n    const date = new Date()\r\n    let hourse = date.getHours();\r\n    let minutes = date.getMinutes();\r\n\r\n\r\n    return(<div>\r\n\r\n       <div>\r\n\r\n           <TextField value = {props.messageForNewPost} onChange={onChangeTextFieldHandler}  id=\"standard-basic\" label=\"Standard\" />\r\n           <Button onClick={()=>onAddNewPost(props.messageForNewPost)} variant=\"outlined\" color=\"primary\" size='small'>Send</Button>\r\n           {error && <div>{error}</div>}\r\n       </div>\r\n        <div>\r\n            {\r\n                props.itemsPost.map( p => {\r\n                    return(\r\n                        <div key = {p.id}>\r\n                            <div>\r\n                                <div>\r\n                                    <div><img src={p.ImgPerson} alt=\"\"/></div>\r\n                                    <div>\r\n                                        <h4>{p.person.name} {p.person.secondName}</h4>\r\n                                        <p>{`${hourse}:${minutes}`}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <IconButton onClick = {()=> onRemovePostHandler(p.id)}>\r\n                                        <Delete />\r\n                                    </IconButton>\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                                <p>{p.content}</p>\r\n                            </div>\r\n                            <div>\r\n                                <button><img src={p.imgLikes} alt=\"\"/></button>\r\n                                <h3>{p.counterLikes}</h3>\r\n                            </div>\r\n                            <div><img src={p.imgShare} alt=\"\"/>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n\r\n\r\n    </div>)\r\n}\r\n\r\nexport default PostWallComponent;","Q:\\react-incubator\\socialePageRedux\\src\\WrapPage\\Main\\MainPostWall\\PostWallConteiner.tsx",["62"],"import React from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n     ItemPostType,\r\n    onAddNewPostHandler,\r\n    onChangeTextPost,\r\n    onRemovePostCreater, setItemPostAC,\r\n\r\n} from \"../../../Store/postWall.reducer\";\r\nimport PostWallComponent from \"./PostWallComponent\";\r\nimport {Dispatch} from \"redux\";\r\n\r\n\r\n\r\nlet mapStateToProps  = (state:{postBlock:{itemsPost: Array <ItemPostType>,messageForNewPost: string } } ) => {\r\n    return {\r\n        itemsPost: state.postBlock.itemsPost,\r\n        messageForNewPost : state.postBlock.messageForNewPost\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch : Dispatch) => {\r\n    return{\r\n        onAddNewPostHandler: (content: string) => {\r\n            dispatch(onAddNewPostHandler(content))\r\n        },\r\n        onChangeTextPost: (content:string) => {\r\n            dispatch(onChangeTextPost(content))\r\n        },\r\n        onRemovePostCreater:(id:string) => {\r\n            dispatch(onRemovePostCreater(id))\r\n        },\r\n        setItemPostAC: (newPosts: ItemPostType) => {\r\n            dispatch(setItemPostAC(newPosts))\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default connect (mapStateToProps, mapDispatchToProps) (PostWallComponent)\r\n\r\n\r\n",["63","64"],"Q:\\react-incubator\\socialePageRedux\\src\\Store\\postWall.reducer.ts",[],"Q:\\react-incubator\\socialePageRedux\\src\\Store\\Store.ts",[],["65","66"],"Q:\\react-incubator\\socialePageRedux\\src\\WrapPage\\Friend\\FriendComponent.tsx",["67","68"],"Q:\\react-incubator\\socialePageRedux\\src\\WrapPage\\Friend\\FriendConteiner.tsx",["69"],"import React from 'react'\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {followAC, friendsType, setFriendAC,  unFollowAC} from \"../../Store/Friend.Reducer\";\r\nimport FriendComponent from \"./FriendComponent\";\r\nimport {Dispatch} from \"redux\";\r\n\r\n\r\n\r\n    const mapStateToProps = (state: {friendsPage:{friends: Array<friendsType>}}) => {\r\n\r\n    return {\r\n        friends: state.friendsPage.friends\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => {\r\n    return{\r\n        follow: (userId: string) => {\r\n           dispatch(followAC(userId))\r\n        },\r\n\r\n        unFollowAC: (userId: string) => {\r\n            dispatch(unFollowAC(userId))\r\n        },\r\n\r\n        setFriend: (newFriends: friendsType) => {\r\n            dispatch(setFriendAC(newFriends))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect (mapStateToProps, mapDispatchToProps) (FriendComponent)","Q:\\react-incubator\\socialePageRedux\\src\\StaticPage\\Navigation\\NavigationConteiner.tsx",[],"Q:\\react-incubator\\socialePageRedux\\src\\Store\\FriendsPage.Reducer.ts",[],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"70","replacedBy":"74"},{"ruleId":"72","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":20,"column":19,"nodeType":"78","messageId":"79","endLine":20,"endColumn":27},{"ruleId":"76","severity":1,"message":"80","line":1,"column":8,"nodeType":"78","messageId":"79","endLine":1,"endColumn":13},{"ruleId":"70","replacedBy":"81"},{"ruleId":"72","replacedBy":"82"},{"ruleId":"70","replacedBy":"83"},{"ruleId":"72","replacedBy":"84"},{"ruleId":"76","severity":1,"message":"85","line":2,"column":22,"nodeType":"78","messageId":"79","endLine":2,"endColumn":31},{"ruleId":"86","severity":1,"message":"87","line":25,"column":52,"nodeType":"88","endLine":25,"endColumn":132},{"ruleId":"76","severity":1,"message":"80","line":1,"column":8,"nodeType":"78","messageId":"79","endLine":1,"endColumn":13},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],["89"],["90"],"@typescript-eslint/no-unused-vars","'setError' is assigned a value but never used.","Identifier","unusedVar","'React' is defined but never used.",["89"],["90"],["89"],["90"],"'stateType' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]