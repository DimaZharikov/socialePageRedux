{"version":3,"sources":["StaticPage/Header/login/LogInAppComponent.tsx","StaticPage/Header/login/LogInFormContainer.tsx"],"names":["LoginReduxForm","maxLengthValidate","reduxForm","form","handleSubmit","error","onSubmit","createField","required","Input","type","undefined","className","style","formSummaryControl","connect","state","auth","authentication","isAuth","logInThunk","logOutThunk","getAuthUserDate","props","to","formData","email","password","rememberMe"],"mappings":"uMAmEMA,GA5CWC,YAAkB,IA4CZC,YAAwB,CAACC,KAAM,SAA/BD,EA1BuC,SAAC,GAIzD,IAFEE,EAEH,EAFGA,aAAcC,EAEjB,EAFiBA,MAGlB,OAEI,uBAAMC,SAAUF,EAAhB,UAEKG,YAAY,QAAS,QAAS,CAACC,KAAWC,KAC1CF,YAAY,WAAY,WAAY,CAACC,KAAWC,IAAO,CAACC,KAAM,aAC9DH,iBAAYI,EAAW,aAAc,GAAIF,IAAO,CAACC,KAAM,YAAa,cAGpEL,EACG,qBAAKO,UAAWC,IAAMC,mBAAtB,SACKT,IACI,GAEb,8BACI,oD,QCjDDU,uBAJS,SAACC,GAAD,MAA8B,CAClDC,KAAMD,EAAME,eAAeC,UAGS,CACpCC,eAAYC,gBAAaC,qBADdP,EDasB,SAAC,GAIjC,EAFGO,gBAEF,IAFsBC,EAEvB,mCAID,OAAIA,EAAMN,KAAa,cAAC,IAAD,CAAUO,GAAI,aAEjC,gCACI,uCACA,cAACxB,EAAD,aAAgBM,SAPP,SAACmB,GACdF,EAAMH,WAAWK,EAASC,MAAOD,EAASE,SAAUF,EAASG,cAMlBL","file":"static/js/4.a39586bb.chunk.js","sourcesContent":["import {FC} from 'react'\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../../../common/formsControl/FormsControls\";\r\nimport {maxLengthValidate, required} from \"../../../common/formsControl/validationFormSettings/validation\";\r\nimport style from './../../../common/formsControl/fromControlStyle.module.css';\r\n\r\n\r\nexport type formDataType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n\r\n\r\n}\r\nexport type IPropsType = {\r\n    auth: boolean,\r\n    getAuthUserDate: (formData: formDataType) => void,\r\n    logInThunk: (email: string, password: string, rememberMe: boolean) => void,\r\n    logOutThunk: () => void,\r\n\r\n\r\n}\r\nconst maxCreat = maxLengthValidate(12)\r\n\r\nexport const Login: FC<IPropsType> = (\r\n    {\r\n        getAuthUserDate, ...props\r\n    }\r\n) => {\r\n    const onSubmit = (formData: formDataType) => {\r\n        props.logInThunk(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n    if (props.auth) return <Redirect to={'/profile'}/>\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit}{...props} />\r\n        </div>\r\n    )\r\n}\r\nexport const LoginForm: FC<InjectedFormProps<formDataType>> = (\r\n    {\r\n        handleSubmit, error\r\n    }\r\n) => {\r\n    return (\r\n\r\n        <form onSubmit={handleSubmit}>\r\n\r\n            {createField(\"email\", 'login', [required], Input,)}\r\n            {createField(\"Password\", 'Password', [required], Input, {type: 'password'})}\r\n            {createField(undefined, 'rememberMe', [], Input, {type: 'checkbox'}, 'rememberMe')}\r\n\r\n\r\n            {error ?\r\n                <div className={style.formSummaryControl}>\r\n                    {error}\r\n                </div> : ''\r\n            }\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm<formDataType>({form: \"login\"})(LoginForm)","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {Login} from \"./LogInAppComponent\";\r\nimport {AppRootStateType} from \"../../../Store/Store\";\r\nimport {getAuthUserDate, logInThunk, logOutThunk} from \"../../../Store/Reducer with Include Selector/AuthRedirectWithHaederPage/Auth.Reducer\";\r\n\r\n\r\n\r\nconst mapStateToProps = (state: AppRootStateType) => ({\r\n    auth: state.authentication.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {\r\n    logInThunk, logOutThunk, getAuthUserDate})(Login)"],"sourceRoot":""}