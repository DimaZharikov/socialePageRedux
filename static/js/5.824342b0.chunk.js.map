{"version":3,"sources":["WrapPage/Message/Components/SerchFriend/SearchFriendsComponent.tsx","WrapPage/Message/Components/SerchFriend/SearchFriendsConteiner.tsx","WrapPage/Message/Components/MessageItems/MappedMessageComponent.tsx","WrapPage/Message/Components/MessageItems/MessagesComponent.tsx","WrapPage/Message/Components/MessageItems/MessagesConteiner.tsx","WrapPage/Message/MessagePageAppComponent.tsx"],"names":["SearchFriendsComponent","onFilterFriends","searchFriends","setSearch","useState","isCollapsedFriend","setIsCollapsedFriend","ShowCollapsedFriend","useCallback","onSearchChangeFilterKeyPress","event","currentTarget","value","TextField","onClick","onBlur","onChange","id","label","color","map","items","src","img","alt","name","secondName","connect","state","messagePage","dispatch","setSearchFriendsAC","onSearchFriendsAC","MappedMessageComponent","onRemoveDialogueItemsAC","messageItems","imgUrl","profile_online","Date","toLocaleTimeString","IconButton","aria-label","Delete","exact","to","message","MessagesComponent","memo","props","console","log","filter","setFilter","filteredMessage","m","importantly","item","setMessage","setMessageItemsAC","MessagePageAppComponent","useSelector","authentication","isAuth","SearchFriendsConteiner"],"mappings":"2JAgDeA,EApCiD,SAAC,GAA+C,IAA9CC,EAA6C,EAA7CA,gBAAgBC,EAA6B,EAA7BA,cAA6B,KAAfC,UAE1CC,oBAAkB,IAFuC,mBAEpGC,EAFoG,KAEjFC,EAFiF,KAMrGC,EAAsBC,uBAAY,kBAAKF,GAAsBD,KAAmB,CAACA,IACjFI,EAA+BD,uBAAY,SAACE,GAE/CT,EAAgBS,EAAMC,cAAcC,SACrC,IAEF,OAAO,gCACH,8BACI,8BACI,cAACC,EAAA,EAAD,CAAWC,QAASP,EACRQ,OAAQ,kBAAIT,GAAqB,IAClCU,SAAY,SAACN,GAAD,OAAUD,EAA6BC,IAClDO,GAAG,qBAAqBC,MAAM,wBAAwBC,MAAM,gBAO5Ed,GAAqBH,EAAckB,KAAK,SAAAC,GACpC,OACI,gCACI,qBAAKC,IAAKD,EAAME,IAAKC,IAAI,uBACzB,4BAAIH,EAAMI,OAFd,IAEwB,4BAAIJ,EAAMK,eAFtBL,EAAMJ,W,SCPvBU,eAtBS,SAACC,GACrB,MAAM,CAEF1B,cAAe0B,EAAMC,YAAY3B,kBAKd,SAAC4B,GACxB,MAAM,CACF3B,UAAW,SAACD,GACR4B,EAASC,YAAmB7B,KAEhCD,gBAAiB,SAACwB,GACdK,EAASE,YAAkBP,QAQxBE,CAA+C3B,G,0BCe/CiC,EApC0C,SAAC,GAEO,IAFLC,EAEI,EAFJA,wBACEC,EACE,EADFA,aAE1D,OACI,gCACI,gCACI,8BACI,qBAAKb,IAAKa,EAAaC,OAAQZ,IAAI,oBAEvC,8BACKW,EAAaE,eAAiB,SAAW,QAIlD,gCACI,gCACI,gCACKF,EAAaV,KAAMU,EAAaT,cAErC,iCACK,IAAIY,MAAOC,qBACZ,cAACC,EAAA,EAAD,CAAY1B,QAAS,kBAAMoB,EAAwBC,EAAalB,KACpDwB,aAAW,SAAStB,MAAM,UADtC,SAEI,cAACuB,EAAA,EAAD,YAIZ,8BACI,cAAC,IAAD,CAASC,OAAK,EAACC,GAAE,oBAAeT,EAAalB,IAA7C,SAAmD,4BAAIkB,EAAaU,mBAxBtEV,EAAalB,KCgDhB6B,EA7CqCC,gBAAK,SAACC,GACtDC,QAAQC,IAAI,WADoD,MAGhC9C,mBAA4B4C,EAAMb,cAHF,gCAIrC/B,mBAA2B,QAJU,mBAIzD+C,EAJyD,KAIjDC,EAJiD,KASxDC,EAAkBL,EAAMb,aAehC,MAbe,WAAXgB,IACAE,EAAkBA,EAAgBF,QAAO,SAAAG,GAAC,MAAqB,WAAlBA,EAAEC,gBAGpC,cAAXJ,IACAE,EAAkBA,EAAgBF,QAAO,SAAAG,GAAC,MAAsB,cAAlBA,EAAEC,gBAQ7C,gCACH,gCACI,wBAAQzC,QAAS,kBAAKsC,EAAU,QAAhC,iBACA,wBAAQtC,QAAS,kBAAKsC,EAAU,WAAhC,oBACA,wBAAQtC,QAAS,kBAAKsC,EAAW,cAAjC,0BAGJ,8BACMC,EAAgBjC,KAAI,SAAAoC,GACnB,OAAQ,8BACJ,cAAE,EAAF,CAAyBrB,aAAcqB,EACdtB,wBAA0BA,KADCsB,EAAKvC,iBCvB7DU,eArBS,SAACC,GACrB,MAAM,CACFO,aAAcP,EAAMC,YAAYM,iBAIb,SAACL,GACxB,MAAM,CACFI,wBAAyB,SAACjB,GACtBa,EAASI,YAAwBjB,KAIrCwC,WAAY,SAACtB,GACTL,EAAS4B,YAAkBvB,QAOxBR,CAA+CmB,G,QCL/Ca,UAbmC,WAG9C,OADaC,aAAwC,SAAAhC,GAAK,OAAIA,EAAMiC,kBAC1DC,OAEH,eAAC,WAAD,WACH,cAACC,EAAD,IACA,cAAC,EAAD,OAJqB,cAAC,IAAD,CAAWnB,GAAM","file":"static/js/5.824342b0.chunk.js","sourcesContent":["import React, {ChangeEvent, useCallback, useState} from 'react'\r\nimport {searchFriendType} from \"../../../../Store/Reducer with Include Selector/MessagePage/MessagePage.Reducer\";\r\nimport {TextField} from \"@material-ui/core\";\r\n\r\n\r\ninterface props {\r\n\r\n    onFilterFriends: (name: string) => void,\r\n    searchFriends : Array<searchFriendType>,\r\n    setSearch: (searchFriends : Array<searchFriendType>)=> void\r\n}\r\n\r\nconst SearchFriendsComponent: React.FunctionComponent <props> = ({onFilterFriends,searchFriends,setSearch}) => {\r\n\r\n    const [isCollapsedFriend, setIsCollapsedFriend] = useState<boolean>(false)\r\n\r\n\r\n\r\n    const ShowCollapsedFriend = useCallback(()=> setIsCollapsedFriend(!isCollapsedFriend),[isCollapsedFriend] )\r\n    const onSearchChangeFilterKeyPress = useCallback((event: ChangeEvent <HTMLInputElement | HTMLTextAreaElement>) =>{\r\n\r\n       onFilterFriends(event.currentTarget.value)\r\n    },[])\r\n\r\n    return(<div>\r\n        <div>\r\n            <div>\r\n                <TextField onClick={ShowCollapsedFriend}\r\n                            onBlur={()=>setIsCollapsedFriend(false)}\r\n                           onChange = {(event)=> onSearchChangeFilterKeyPress(event)}\r\n                            id=\"standard-secondary\" label=\"Faster search Friends\" color=\"primary\" />\r\n            </div>\r\n\r\n\r\n        </div>\r\n\r\n        {\r\n            isCollapsedFriend && searchFriends.map( items => {\r\n                return (\r\n                    <div key = {items.id}>\r\n                        <img src={items.img} alt=\"There was y Friend\"/>\r\n                        <p>{items.name}</p> <p>{items.secondName}</p>\r\n                    </div>)\r\n            })\r\n        }\r\n    </div>)\r\n}\r\n\r\nexport default SearchFriendsComponent","import {connect} from \"react-redux\";\r\nimport SearchFriendsComponent from \"./SearchFriendsComponent\";\r\nimport {\r\n\r\n    onSearchFriendsAC,\r\n    searchFriendType,\r\n    setSearchFriendsAC\r\n} from \"../../../../Store/Reducer with Include Selector/MessagePage/MessagePage.Reducer\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nconst mapStateToProps = (state: {messagePage: {searchFriends: Array<searchFriendType> }, searchInput: string}) => {\r\n    return{\r\n\r\n        searchFriends: state.messagePage.searchFriends\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch : Dispatch) => {\r\n    return{\r\n        setSearch: (searchFriends: Array<searchFriendType>) => {\r\n            dispatch(setSearchFriendsAC(searchFriends))\r\n        },\r\n        onFilterFriends: (name: string) => {\r\n            dispatch(onSearchFriendsAC(name))\r\n        },\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default connect (mapStateToProps, mapDispatchToProps) (SearchFriendsComponent)","import {FunctionComponent} from \"react\";\r\nimport {messageItemType} from \"../../../../Store/Reducer with Include Selector/MessagePage/MessagePage.Reducer\";\r\nimport {IconButton} from \"@material-ui/core\";\r\nimport {Delete} from \"@material-ui/icons\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ninterface Props {\r\n    messageItems: messageItemType\r\n    onRemoveDialogueItemsAC: (id: string) => void,\r\n}\r\n\r\nconst MappedMessageComponent: FunctionComponent<Props> = ({ onRemoveDialogueItemsAC,\r\n                                                              messageItems\r\n                                                          }) => {\r\n    return (\r\n        <div key={messageItems.id}>\r\n            <div>\r\n                <div>\r\n                    <img src={messageItems.imgUrl} alt=\"avatar friend\"/>\r\n                </div>\r\n                <div>\r\n                    {messageItems.profile_online ? 'online' : ''}\r\n                </div>\r\n            </div>\r\n\r\n            <div>\r\n                <div>\r\n                    <div>\r\n                        {messageItems.name}{messageItems.secondName}\r\n                    </div>\r\n                    <div>\r\n                        {new Date().toLocaleTimeString()}\r\n                        <IconButton onClick={() => onRemoveDialogueItemsAC(messageItems.id)}\r\n                                    aria-label=\"delete\" color=\"primary\">\r\n                            <Delete/>\r\n                        </IconButton>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <NavLink exact to={`/dialogue/${messageItems.id}`}><p>{messageItems.message}</p></NavLink>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>)\r\n}\r\n\r\nexport default MappedMessageComponent;","import {FunctionComponent, memo, useState} from 'react'\r\nimport {\r\n    ChangeFilterType,\r\n    messageItemType,\r\n    onRemoveDialogueItemsAC\r\n} from \"../../../../Store/Reducer with Include Selector/MessagePage/MessagePage.Reducer\";\r\nimport MappedMessageComponent from \"./MappedMessageComponent\";\r\n\r\n\r\n\r\n\r\ninterface props {\r\n    messageItems: Array<messageItemType>,\r\n    onRemoveDialogueItemsAC: (id: string) => void,\r\n    setMessage: (messageItems: Array<messageItemType>) => void\r\n\r\n}\r\n\r\nconst MessagesComponent: FunctionComponent<props> = memo((props) => {\r\n    console.log('changed')\r\n// ChangeFiler --\r\n    const [messages, setMessages] = useState<messageItemType[]>(props.messageItems);\r\n    const [filter, setFilter]= useState<ChangeFilterType>('All');\r\n\r\n\r\n\r\n\r\n        let filteredMessage = props.messageItems\r\n\r\n    if (filter === 'Unread') {\r\n        filteredMessage = filteredMessage.filter(m=> m.importantly === 'Unread');\r\n    }\r\n\r\n    if (filter === 'Important'){\r\n        filteredMessage = filteredMessage.filter(m => m.importantly === 'Important')\r\n    }\r\n\r\n\r\n\r\n\r\n// -- ChangeFilter\r\n\r\n    return <div>\r\n        <div>\r\n            <button onClick={()=> setFilter('All')} >All</button>\r\n            <button onClick={()=> setFilter('Unread')} >Unread</button>\r\n            <button onClick={()=> setFilter( 'Important')}>Important</button>\r\n        </div>\r\n\r\n        <div>\r\n           {  filteredMessage.map(item => {\r\n               return (<div>\r\n                   < MappedMessageComponent messageItems={item} key = {item.id}\r\n                                            onRemoveDialogueItemsAC= {onRemoveDialogueItemsAC} />\r\n               </div>)\r\n           })\r\n\r\n           }\r\n       </div>\r\n\r\n    </div>\r\n})\r\n\r\nexport default MessagesComponent","import {connect} from \"react-redux\";\r\nimport MessagesComponent from \"./MessagesComponent\";\r\nimport {messageItemType, onRemoveDialogueItemsAC, setMessageItemsAC} from \"../../../../Store/Reducer with Include Selector/MessagePage/MessagePage.Reducer\";\r\nimport {Dispatch} from \"redux\";\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state: {messagePage: {messageItems: Array<messageItemType>}}, ) => {\r\n    return{\r\n        messageItems: state.messagePage.messageItems,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch : Dispatch) => {\r\n    return{\r\n        onRemoveDialogueItemsAC: (id: string) => {\r\n            dispatch(onRemoveDialogueItemsAC(id))\r\n        },\r\n\r\n\r\n        setMessage: (messageItems: Array<messageItemType>) => {\r\n            dispatch(setMessageItemsAC(messageItems))\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect (mapStateToProps, mapDispatchToProps) (MessagesComponent)","import {FunctionComponent,Fragment} from 'react'\r\nimport SearchFriendsConteiner from \"./Components/SerchFriend/SearchFriendsConteiner\";\r\nimport MessageItemsConteiner from \"./Components/MessageItems/MessagesConteiner\";\r\n\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../Store/Store\";\r\nimport {stateProps as authProps} from \"../../Store/Reducer with Include Selector/AuthRedirectWithHaederPage/Auth.Reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\n\r\nconst MessagePageAppComponent:FunctionComponent = () => {\r\n\r\n    const auth = useSelector<AppRootStateType,authProps>(state => state.authentication);\r\n    if (!auth.isAuth) return <Redirect  to = {'/logIn'} />\r\n\r\n    return <Fragment>\r\n        <SearchFriendsConteiner/>\r\n        <MessageItemsConteiner/>\r\n    </Fragment>\r\n}\r\n\r\n\r\n\r\nexport default MessagePageAppComponent;"],"sourceRoot":""}