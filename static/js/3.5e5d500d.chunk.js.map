{"version":3,"sources":["common/Paginator/Paginator.module.css","../node_modules/classnames/index.js","common/Paginator/PaginatorComponent.tsx","WrapPage/Friend/FirendComponent.tsx","WrapPage/Friend/FriendsPageComponent.tsx","WrapPage/Friend/FriendsPageConteiner.tsx"],"names":["module","exports","hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","key","call","join","default","Paginator","totalFriendCount","pageSize","currentPage","onPageChangeHandler","x","portionSize","pagesCount","Math","ceil","pages","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","className","cn","styles","paginator","onClick","filter","p","map","selectedPage","pageNumber","event","FriendComponent","friends","followingInProgress","followThunk","unfollowThunk","to","id","src","photos","small","alt","status","followed","disabled","some","name","uniqueUrlName","FriendsPageComponent","React","memo","useSelector","state","authentication","isAuth","PaginatorComponent","item","FriendContainer","props","getFriendsThunk","this","isFetching","Preloader","setCurrentPage","toggleFollowingProgress","Component","compose","connect","friendsPage","toggleIsFetching"],"mappings":"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","file":"static/js/3.5e5d500d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__2Zk-q\",\"pageNumber\":\"Paginator_pageNumber__15oJh\",\"selectedPage\":\"Paginator_selectedPage__2XcQB\"};","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import React, {useState} from 'react'\r\nimport styles from './Paginator.module.css'\r\nimport cn from 'classnames'\r\n\r\ntype PropsType = {\r\n    totalFriendCount: number\r\n    pageSize: number\r\n    currentPage?: number\r\n    onPageChangeHandler?: (pageNumber: number) => void\r\n    portionSize?: number\r\n}\r\n\r\nconst Paginator: React.FC<PropsType> = ({totalFriendCount, pageSize,\r\n                                          currentPage = 1,\r\n                                          onPageChangeHandler = x => x,\r\n                                          portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalFriendCount / pageSize);\r\n\r\n    let pages: Array<number> = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n\r\n    return <div className={cn(styles.paginator)}>\r\n        { portionNumber > 1 &&\r\n        <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button> }\r\n\r\n        {pages\r\n            .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n            .map((p) => {\r\n                return <span className={ cn({\r\n                    [styles.selectedPage]: currentPage === p\r\n                }, styles.pageNumber) }\r\n                             key={p}\r\n                             onClick={(event) => {\r\n                                 onPageChangeHandler(p);\r\n                             }}>{p}</span>\r\n            })}\r\n        { portionCount > portionNumber &&\r\n        <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button> }\r\n\r\n\r\n    </div>\r\n}\r\n\r\nexport default Paginator;","import React from 'react'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {itemsBackPropsToFriends} from \"../../Store/API/API\";\r\n\r\n\r\ninterface Props {\r\n    friends: itemsBackPropsToFriends,\r\n    followingInProgress: any,\r\n    followThunk: (id: number) => void\r\n    unfollowThunk: (id: number) => void\r\n\r\n}\r\n\r\nconst FriendComponent: React.FC<Props> = ({\r\n                                              friends,\r\n                                              followingInProgress,\r\n                                              followThunk,\r\n                                              unfollowThunk\r\n\r\n                                          }) => {\r\n    return (<div>\r\n        <div>\r\n            <div>\r\n                <NavLink to={'/profile/' + friends.id}>\r\n                    <img\r\n                        src={friends.photos.small != null ? friends.photos.small : \"https://img.icons8.com/ios-glyphs/100/000000/change-user-male.png\"}\r\n                        alt=\"\"/>\r\n                    {friends.status ?\r\n                        <img\r\n                            src=\"https://img.icons8.com/color/12/000000/connection-status-on--v1.png\"\r\n                            alt={'pictures'}/>\r\n                        : ''\r\n                    }\r\n                </NavLink>\r\n            </div>\r\n            {friends.followed ?\r\n                <button disabled={followingInProgress.some(((id: number) => id === friends.id))}\r\n                        onClick={() => {\r\n                            followThunk(friends.id)\r\n                        }}>\r\n                    Followed</button>\r\n\r\n                :\r\n                <button disabled={followingInProgress.some(((id: number) => id === friends.id))}\r\n                        onClick={() => {\r\n                            unfollowThunk(friends.id)\r\n                        }}\r\n\r\n\r\n                >Unfollowed</button>\r\n            }\r\n        </div>\r\n        <div>\r\n            <div>\r\n                <h3>{friends.name} {friends.uniqueUrlName}</h3>\r\n                <h4>{friends.status}</h4>\r\n            </div>\r\n\r\n        </div>\r\n    </div>)\r\n}\r\n\r\nexport default FriendComponent","import React from 'react'\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {itemsBackPropsToFriends} from \"../../Store/API/API\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../Store/Store\";\r\nimport {stateProps as authProps} from \"../../Store/Reducer with Include Selector/AuthRedirectWithHaederPage/Auth.Reducer\";\r\nimport PaginatorComponent from \"../../common/Paginator/PaginatorComponent\";\r\nimport FriendComponent from \"./FirendComponent\";\r\n\r\ninterface Props {\r\n\r\n    friends: Array<itemsBackPropsToFriends>,\r\n    pageSize: number,\r\n    totalFriendCount: number,\r\n    currentPage: number,\r\n    setCurrentPage: (pageNumber: number) => void\r\n    onPageChangeHandler: (pageNumber: number) => void\r\n    followingInProgress: any\r\n    toggleFollowingProgress: (followingInProgress: boolean, friendsId: number) => void\r\n    followThunk: (id: number) => void\r\n    unfollowThunk: (id: number) => void\r\n\r\n}\r\n\r\n//setFriends - AC for .get from server searchFriends\r\nconst FriendsPageComponent: React.FunctionComponent<Props> = React.memo((\r\n    {\r\n\r\n        friends,\r\n        pageSize,\r\n        totalFriendCount,\r\n        onPageChangeHandler,\r\n        followingInProgress,\r\n        followThunk,\r\n        unfollowThunk,\r\n        currentPage\r\n\r\n    }) => {\r\n\r\n    const auth = useSelector<AppRootStateType, authProps>(state => state.authentication);\r\n    if (!auth.isAuth) return <Redirect to={'/logIn'}/>\r\n\r\n\r\n    return (<div>\r\n        <PaginatorComponent pageSize={pageSize}\r\n                            totalFriendCount={totalFriendCount}\r\n                            onPageChangeHandler={onPageChangeHandler}\r\n                            currentPage={currentPage}\r\n        />\r\n\r\n        {\r\n            friends.map(item => {\r\n                return (<div key={item.id}>\r\n                    <FriendComponent friends={item}\r\n                                     followingInProgress={followingInProgress}\r\n                                     followThunk={followThunk}\r\n                                     unfollowThunk={unfollowThunk}\r\n                    />\r\n\r\n                </div>)\r\n            })\r\n        }\r\n\r\n    </div>)\r\n\r\n})\r\n\r\nexport default FriendsPageComponent;\r\n","import {Component,Fragment,ComponentType} from 'react'\r\nimport {\r\n    followThunk,\r\n    getFriendsThunk,\r\n    setCurrentPage,\r\n    toggleFollowingProgress,\r\n    toggleIsFetching,\r\n    unfollowThunk\r\n} from \"../../Store/Reducer with Include Selector/FriendsPage/FriendsPage.Reducer\";\r\n\r\n\r\nimport FriendsPageComponent from \"./FriendsPageComponent\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport Preloader from \"../../common/preloader/Preloader\";\r\nimport {itemsBackPropsToFriends} from \"../../Store/API/API\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\ninterface Props {\r\n\r\n    friends: Array<itemsBackPropsToFriends>,\r\n    pageSize: number,\r\n    totalFriendCount: number,\r\n    currentPage: number,\r\n    setCurrentPage: (pageNumber: number) => void,\r\n    toggleIsFetching: (isFetching: boolean) => void,\r\n    isFetching: boolean,\r\n    followingInProgress: any,\r\n    toggleFollowingProgress: (isFetching: boolean, friendsId: number) => void,\r\n    getFriendsThunk: (pageSize: number, currentPage: number) => void,\r\n    followThunk: (id: number) => void\r\n    unfollowThunk: (id: number) => void\r\n\r\n\r\n}\r\n\r\nclass FriendContainer extends Component<Props> {\r\n\r\n    componentDidMount() {\r\n        this.props.getFriendsThunk(this.props.pageSize, this.props.currentPage)\r\n\r\n    }\r\n\r\n    onPageChangeHandler = (pageNumber: number) => {\r\n        this.props.getFriendsThunk(this.props.pageSize, pageNumber)\r\n    }\r\n\r\n    render() {\r\n        return <Fragment>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <FriendsPageComponent\r\n                totalFriendCount={this.props.totalFriendCount}\r\n                pageSize={this.props.pageSize}\r\n                friends={this.props.friends}\r\n                currentPage={this.props.currentPage}\r\n\r\n                setCurrentPage={this.props.setCurrentPage}\r\n                onPageChangeHandler={this.onPageChangeHandler}\r\n                followingInProgress={this.props.followingInProgress}\r\n                toggleFollowingProgress={this.props.toggleFollowingProgress}\r\n                followThunk={this.props.followThunk}\r\n                unfollowThunk={this.props.unfollowThunk}\r\n\r\n            />\r\n        </Fragment>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: {\r\n    friendsPage: {\r\n        friends: Array<itemsBackPropsToFriends>, pageSize: number,\r\n        totalFriendCount: number, currentPage: number, isFetching: boolean, followingInProgress: Array<number>\r\n    }\r\n\r\n}) => {\r\n\r\n    return {\r\n        friends: state.friendsPage.friends,\r\n        pageSize: state.friendsPage.pageSize,\r\n        totalFriendCount: state.friendsPage.totalFriendCount,\r\n        currentPage: state.friendsPage.currentPage,\r\n        isFetching: state.friendsPage.isFetching,\r\n        followingInProgress: state.friendsPage.followingInProgress\r\n    }\r\n}\r\n\r\n//\r\n// const mapStateToProps = (state: AppRootStateType) => {\r\n//     return {\r\n//         friends : selectFriend(state),\r\n//         pageSize: selectPageSize(state),\r\n//         totalFriendCount:  selectTotalFriendCount(state),\r\n//         currentPage: selectCurrentPage(state),\r\n//         IsFetching: selectIsFetching(state),\r\n//         followingInProgress: selectFollowingInProgress(state)\r\n//     }\r\n// }\r\n\r\n\r\n\r\nexport default compose<ComponentType> (connect(mapStateToProps, {\r\n\r\n    setCurrentPage,\r\n    toggleIsFetching,\r\n    toggleFollowingProgress,\r\n    getFriendsThunk,\r\n    followThunk,\r\n    unfollowThunk})) (FriendContainer)\r\n\r\n\r\n\r\n"],"sourceRoot":""}