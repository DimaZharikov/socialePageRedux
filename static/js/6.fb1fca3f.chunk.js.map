{"version":3,"sources":["components/Video/styles.module.scss","redux/Movies/movies-selector.ts","components/Video/SearchingMovie.tsx"],"names":["module","exports","selectMoviesSearch","state","movies","data","selectError","error","selectIsFetching","isFetching","selectMovieById","movieById","Title","Typography","SearchingMovieDesc","bodyMovieById","useSelector","dispatch","useDispatch","imdbID","useParams","useEffect","getMovieByID","RatingsMapped","Ratings","map","items","index","level","Source","Value","className","style","container","src","Poster","alt","Country","Year","Genre","Released","Actors","Runtime","Director","Plot","Awards"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,UAAY,0BAA0B,eAAiB,+BAA+B,WAAa,2BAA2B,UAAY,4B,iCCE5J,wIAAO,IAAMC,EAAqB,SAACC,GAC/B,OAAOA,EAAMC,OAAOC,MAGXC,EAAc,SAACH,GACxB,OAAOA,EAAMC,OAAOG,OAIVC,EAAmB,SAACL,GAC9B,OAAOA,EAAMC,OAAOK,YAIXC,EAAkB,SAACP,GAC5B,OAAOA,EAAMQ,UAAUN,O,uHCTpBO,E,OAASC,EAATD,MAiDQE,UA9CgB,WAE3B,IAAMC,EAAgBC,YAAYN,KAC5BO,EAAWC,cACVC,EAAUC,cAAVD,OAEPE,qBAAU,WACNJ,EAASK,YAAaH,MACvB,IAGH,IAAMI,EAAa,OAAGR,QAAH,IAAGA,OAAH,EAAGA,EAAeS,QAAQC,KAAI,SAACC,EAAOC,GACrD,OAAQ,8BACJ,eAACf,EAAD,CAAOgB,MAAO,EAAd,UAAkBF,EAAMG,OAAxB,MAAmCH,EAAMI,UAD3BH,MAMtB,OAAQ,sBAAKI,UAAWC,IAAMC,UAAtB,UACJ,8BACI,qBAAKC,IAAG,OAAEnB,QAAF,IAAEA,OAAF,EAAEA,EAAeoB,OAAQC,IAAI,uBAEzC,8BACI,gCACI,eAACxB,EAAD,CAAOgB,MAAO,EAAd,qBAAmBb,QAAnB,IAAmBA,OAAnB,EAAmBA,EAAeH,MAAlC,aAA4CG,QAA5C,IAA4CA,OAA5C,EAA4CA,EAAesB,QAA3D,YAAsEtB,QAAtE,IAAsEA,OAAtE,EAAsEA,EAAeuB,KAArF,QACA,eAAC1B,EAAD,CAAOgB,MAAO,EAAd,2BAAyBb,QAAzB,IAAyBA,OAAzB,EAAyBA,EAAewB,MAAxC,QACA,eAAC3B,EAAD,CAAOgB,MAAO,EAAd,uBAA4BL,EAA5B,OACA,cAACX,EAAD,CAAOgB,MAAO,EAAd,4BACA,+BACI,6BAAI,kDAAcb,QAAd,IAAcA,OAAd,EAAcA,EAAeyB,cACjC,6BAAI,gDAAYzB,QAAZ,IAAYA,OAAZ,EAAYA,EAAe0B,YAC/B,6BAAI,iDAAa1B,QAAb,IAAaA,OAAb,EAAaA,EAAe2B,aAChC,6BAAI,iDAAa3B,QAAb,IAAaA,OAAb,EAAaA,EAAe4B,SAA5B,SACJ,6BAAI,6CAAS5B,QAAT,IAASA,OAAT,EAASA,EAAe6B,KAAxB,SACJ,6BAAI,+CAAW7B,QAAX,IAAWA,OAAX,EAAWA,EAAe8B,OAA1B","file":"static/js/6.fb1fca3f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__1u4Us\",\"container_desc\":\"styles_container_desc__Q-Ud7\",\"desc_items\":\"styles_desc_items__31aPZ\",\"desc_item\":\"styles_desc_item__1IuXL\"};","import {AppStateType} from \"../redux-store\";\r\n\r\n\r\nexport const selectMoviesSearch = (state: AppStateType) => {\r\n    return state.movies.data\r\n}\r\n\r\nexport const selectError = (state: AppStateType) => {\r\n    return state.movies.error\r\n}\r\n\r\n\r\nexport  const selectIsFetching = (state: AppStateType) => {\r\n    return state.movies.isFetching\r\n}\r\n\r\n\r\nexport const selectMovieById = (state : AppStateType) => {\r\n    return state.movieById.data\r\n}","import {FC, useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {selectMovieById} from \"../../redux/Movies/movies-selector\";\r\nimport 'antd/dist/antd.css'\r\nimport style from './styles.module.scss'\r\nimport {getMovieByID} from \"../../redux/Movies/moviesById-reducer\";\r\nimport {Typography} from 'antd';\r\n\r\nconst {Title} = Typography;\r\n\r\n\r\nconst SearchingMovieDesc: FC = () => {\r\n\r\n    const bodyMovieById = useSelector(selectMovieById)\r\n    const dispatch = useDispatch()\r\n    const {imdbID} = useParams<{ imdbID: string }>()\r\n\r\n    useEffect(() => {\r\n        dispatch(getMovieByID(imdbID))\r\n    }, [])\r\n\r\n\r\n    const RatingsMapped = bodyMovieById?.Ratings.map((items, index) => {\r\n        return (<div key={index}>\r\n            <Title level={4}>{items.Source} : {items.Value}</Title>\r\n        </div>)\r\n    })\r\n\r\n\r\n    return (<div className={style.container}>\r\n        <div>\r\n            <img src={bodyMovieById?.Poster} alt=\"there was poster\"/>\r\n        </div>\r\n        <div>\r\n            <div>\r\n                <Title level={1}> {bodyMovieById?.Title} - {bodyMovieById?.Country} ({bodyMovieById?.Year}) </Title>\r\n                <Title level={3}>Genre: {bodyMovieById?.Genre}  </Title>\r\n                <Title level={2}>Ratings : {RatingsMapped} </Title>\r\n                <Title level={2}>Description : </Title>\r\n                <ul>\r\n                    <li><p>Released: {bodyMovieById?.Released}</p></li>\r\n                    <li><p>Actors: {bodyMovieById?.Actors}</p></li>\r\n                    <li><p>Runtime: {bodyMovieById?.Runtime}</p></li>\r\n                    <li><p>Director:{bodyMovieById?.Director} </p></li>\r\n                    <li><p>Plot:{bodyMovieById?.Plot} </p></li>\r\n                    <li><p>Awards:{bodyMovieById?.Awards} </p></li>\r\n                </ul>\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n\r\n\r\n    </div>)\r\n}\r\n\r\nexport default SearchingMovieDesc\r\n\r\n\r\n\r\n"],"sourceRoot":""}